Prefix(qb:=<http://purl.org/linked-data/cube#>)
Prefix(dct:=<http://purl.org/dc/terms/>)
Prefix(geo:=<http://www.w3.org/2003/01/geo/wgs84_pos#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(obda:=<http://www.obdasystems.com/ontology/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(obdaod:=<http://www.obdasystems.com/opendataontology/>)
Prefix(dcterms:=<http://purl.org/dc/terms/>)
Prefix(dcmitype:=<http://purl.org/dc/dcmitype/>)

Ontology(<http://www.obdasystems.com/ontology/>

<http://www.obdasystems.com/ontology/1.0.3>
Declaration(Class(dcterms:LicenseDocument))
Declaration(Class(qb:DataSet))
Declaration(Class(qb:Observation))
Declaration(Class(obda:Accesso))
Declaration(Class(obda:Alimentazione))
Declaration(Class(obda:Autobus))
Declaration(Class(obda:Autocarro))
Declaration(Class(obda:Autoveicolo))
Declaration(Class(obda:Autovettura))
Declaration(Class(obda:Centro_urbano))
Declaration(Class(obda:Ciclomotore))
Declaration(Class(obda:Circoscrizione))
Declaration(Class(obda:Circoscrizione_comunale))
Declaration(Class(obda:Circoscrizione_di_ufficio))
Declaration(Class(obda:Circoscrizione_metropolitana))
Declaration(Class(obda:Circoscrizione_nazionale))
Declaration(Class(obda:Circoscrizione_provinciale))
Declaration(Class(obda:Circoscrizione_regionale))
Declaration(Class(obda:Citta_metropolitana))
Declaration(Class(obda:Classe_Euro))
Declaration(Class(obda:Comune))
Declaration(Class(obda:Denotazione_di_luogo))
Declaration(Class(obda:Denotazione_di_luogo_estero))
Declaration(Class(obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto))
Declaration(Class(obda:Denotazione_indirizzo_per_soggetto_in_veicolo))
Declaration(Class(obda:Ente_privato))
Declaration(Class(obda:Ente_pubblico))
Declaration(Class(obda:Ente_territoriale))
Declaration(Class(obda:Entita_avente_stati))
Declaration(Class(obda:Entita_non_avente_stati))
Declaration(Class(obda:Femmina))
Declaration(Class(obda:Filobus))
Declaration(Class(obda:Filoveicolo))
Declaration(Class(obda:Finalita_cessazione_circolazione_per_demolizione))
Declaration(Class(obda:Finalita_prima_iscrizione_di_veicolo_nuovo))
Declaration(Class(obda:In_disuso))
Declaration(Class(obda:In_uso))
Declaration(Class(obda:Luogo))
Declaration(Class(obda:Macchina_agricola_semovente))
Declaration(Class(obda:Maschio))
Declaration(Class(obda:Motocarro))
Declaration(Class(obda:Motocarrozzetta))
Declaration(Class(obda:Motociclo))
Declaration(Class(obda:Motociclo_a_solo))
Declaration(Class(obda:Motociclo_con_passeggero))
Declaration(Class(obda:Motoveicolo))
Declaration(Class(obda:Nazione))
Declaration(Class(obda:Persona))
Declaration(Class(obda:Persona_fisica))
Declaration(Class(obda:Persona_giuridica))
Declaration(Class(obda:Provincia))
Declaration(Class(obda:Quadriciclo))
Declaration(Class(obda:Rappresentazione))
Declaration(Class(obda:Rappresentazione_nel_PRA))
Declaration(Class(obda:Rappresentazione_nel_ruolo_tributario))
Declaration(Class(obda:Regione))
Declaration(Class(obda:Rimorchio))
Declaration(Class(obda:Semirimorchio))
Declaration(Class(obda:Soggetto))
Declaration(Class(obda:Stato))
Declaration(Class(obda:Stato_con_fermo_amministrativo))
Declaration(Class(obda:Stato_con_ipoteca))
Declaration(Class(obda:Stato_con_ipoteca_o_privilegio))
Declaration(Class(obda:Stato_con_obbligo_di_registrazione_al_PRA))
Declaration(Class(obda:Stato_con_perdita_di_possesso))
Declaration(Class(obda:Stato_con_pignoramento))
Declaration(Class(obda:Stato_con_privilegio))
Declaration(Class(obda:Stato_con_registrazione_al_PRA))
Declaration(Class(obda:Stato_con_sospensione_dalla_circolazione))
Declaration(Class(obda:Stato_con_vincoli))
Declaration(Class(obda:Stato_con_vincoli_o_gravami))
Declaration(Class(obda:Stato_derivato_da_congelamento_beni))
Declaration(Class(obda:Stato_derivato_da_sequestro))
Declaration(Class(obda:Stato_di_cessazione_dalla_circolazione))
Declaration(Class(obda:Stato_di_cessazione_di_attivita))
Declaration(Class(obda:Stato_di_luogo))
Declaration(Class(obda:Stato_di_persona))
Declaration(Class(obda:Stato_di_persona_fisica))
Declaration(Class(obda:Stato_di_persona_giuridica))
Declaration(Class(obda:Stato_di_soggetto))
Declaration(Class(obda:Stato_di_soggetto_iscritto_AIRE))
Declaration(Class(obda:Stato_di_veicolo))
Declaration(Class(obda:Stato_di_veicolo_di_epoca))
Declaration(Class(obda:Stato_di_veicolo_in_concordato_preventivo))
Declaration(Class(obda:Stato_di_veicolo_in_massa_fallimentare))
Declaration(Class(obda:Stato_di_veicolo_rappresentato_in_formalita))
Declaration(Class(obda:Stato_giuridico_di_veicolo))
Declaration(Class(obda:Stato_non_giuridico_di_veicolo))
Declaration(Class(obda:Stato_rappresentato))
Declaration(Class(obda:Stato_rappresentato_dal_PRA))
Declaration(Class(obda:Strada))
Declaration(Class(obda:Targa_estera))
Declaration(Class(obda:Targa_nazionale))
Declaration(Class(obda:Targa_speciale))
Declaration(Class(obda:Targa_veicolo))
Declaration(Class(obda:Tram))
Declaration(Class(obda:Trasporto_specifico))
Declaration(Class(obda:Trattore_agricolo))
Declaration(Class(obda:Trattore_stradale))
Declaration(Class(obda:Triciclo))
Declaration(Class(obda:Ufficio_periferico))
Declaration(Class(obda:Uso_di_soccorso))
Declaration(Class(obda:Uso_per_locazione_senza_conducente))
Declaration(Class(obda:Uso_per_noleggio_con_conducente))
Declaration(Class(obda:Uso_per_pubblica_sicurezza))
Declaration(Class(obda:Uso_per_scuola_guida))
Declaration(Class(obda:Uso_per_servizio_di_linea))
Declaration(Class(obda:Uso_per_servizio_di_piazza))
Declaration(Class(obda:Uso_per_terzi))
Declaration(Class(obda:Uso_per_traino))
Declaration(Class(obda:Uso_per_trasporto_cose))
Declaration(Class(obda:Uso_per_trasporto_non_contemporaneo))
Declaration(Class(obda:Uso_per_trasporto_persone))
Declaration(Class(obda:Uso_per_trasporto_promiscuo))
Declaration(Class(obda:Uso_privato))
Declaration(Class(obda:Uso_proprio))
Declaration(Class(obda:Uso_pubblico))
Declaration(Class(obda:Uso_speciale))
Declaration(Class(obda:Uso_urbano))
Declaration(Class(obda:Veicolo))
Declaration(Class(obda:Veicolo_a_motore))
Declaration(Class(obda:Veicolo_a_trazione_di_veicolo_a_motore))
Declaration(Class(obda:Veicolo_con_motore_a_combustione))
Declaration(Class(obda:Veicolo_con_motore_elettrico))
Declaration(Class(obda:Veicolo_con_numero_di_telaio))
Declaration(Class(obda:Veicolo_ferroviario))
Declaration(Class(obda:Veicolo_non_a_motore))
Declaration(Class(obda:Veicolo_non_registrabile_al_PRA))
Declaration(Class(obda:Veicolo_registrabile_al_PRA))
Declaration(Class(obda:Veicolo_rottamato))
Declaration(Class(obda:Vincolo_o_gravame))
Declaration(Class(obdaod:Alimentazione))
Declaration(Class(obdaod:DataSet))
Declaration(Class(obdaod:DataSet_statistico))
Declaration(Class(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale))
Declaration(Class(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro))
Declaration(Class(obdaod:Osservazione))
Declaration(Class(obdaod:Osservazione_statistica))
Declaration(Class(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale))
Declaration(Class(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione))
Declaration(ObjectProperty(dcterms:contributor))
Declaration(ObjectProperty(dcterms:creator))
Declaration(ObjectProperty(dcterms:license))
Declaration(ObjectProperty(dcterms:publisher))
Declaration(ObjectProperty(dcterms:rightsHolder))
Declaration(ObjectProperty(obda:comune_residenza_in_applicazione_di_bollo_auto))
Declaration(ObjectProperty(obda:est_aggregata_in))
Declaration(ObjectProperty(obda:est_variato_in))
Declaration(ObjectProperty(obda:ha_alimentazione))
Declaration(ObjectProperty(obda:ha_circoscrizione))
Declaration(ObjectProperty(obda:ha_classificazione_Euro))
Declaration(ObjectProperty(obda:ha_denotazione))
Declaration(ObjectProperty(obda:ha_nazione))
Declaration(ObjectProperty(obda:ha_provincia))
Declaration(ObjectProperty(obda:ha_regione))
Declaration(ObjectProperty(obda:ha_residenza))
Declaration(ObjectProperty(obda:ha_residenza_in_accesso))
Declaration(ObjectProperty(obda:ha_residenza_in_comune))
Declaration(ObjectProperty(obda:ha_residenza_in_provincia))
Declaration(ObjectProperty(obda:ha_residenza_in_regione))
Declaration(ObjectProperty(obda:ha_sede))
Declaration(ObjectProperty(obda:ha_sede_legale))
Declaration(ObjectProperty(obda:ha_stato))
Declaration(ObjectProperty(obda:ha_stato_di_luogo))
Declaration(ObjectProperty(obda:ha_stato_di_soggetto))
Declaration(ObjectProperty(obda:ha_stato_di_veicolo))
Declaration(ObjectProperty(obda:ha_targa))
Declaration(ObjectProperty(obda:ha_targa_precedente))
Declaration(ObjectProperty(obda:ha_vincolo_o_gravame))
Declaration(ObjectProperty(obda:ipoteca_ha_creditore))
Declaration(ObjectProperty(obda:partecipa_a_luogo))
Declaration(ObjectProperty(obda:pignoramento_ha_creditore))
Declaration(ObjectProperty(obda:proviene_da_veicolo))
Declaration(ObjectProperty(obda:provincia_residenza_in_applicazione_di_bollo_auto))
Declaration(ObjectProperty(obda:rappresentazione_fatta_da))
Declaration(ObjectProperty(obda:regione_residenza_in_applicazione_di_bollo_auto))
Declaration(ObjectProperty(obda:registrazione_comune))
Declaration(ObjectProperty(obda:registrazione_nazione))
Declaration(ObjectProperty(obda:registrazione_provincia))
Declaration(ObjectProperty(obda:registrazione_regione))
Declaration(ObjectProperty(obda:stato_comunicato_a))
Declaration(ObjectProperty(obda:veicolo_ha_targhe_assegnate))
Declaration(ObjectProperty(obdaod:basato_su))
Declaration(ObjectProperty(obdaod:compare_in_dataset))
Declaration(ObjectProperty(obdaod:contiene_osservazione))
Declaration(ObjectProperty(obdaod:ha_proprieta_dimensionale))
Declaration(ObjectProperty(obdaod:ha_proprieta_dimensionale_Euro))
Declaration(ObjectProperty(obdaod:ha_proprieta_dimensionale_alimentazione))
Declaration(ObjectProperty(obdaod:ha_proprieta_dimensionale_ente_territoriale))
Declaration(DataProperty(dcterms:abstract))
Declaration(DataProperty(dcterms:available))
Declaration(DataProperty(dcterms:bibliographicCitation))
Declaration(DataProperty(dcterms:description))
Declaration(DataProperty(dcterms:format))
Declaration(DataProperty(dcterms:identifier))
Declaration(DataProperty(dcterms:issued))
Declaration(DataProperty(dcterms:title))
Declaration(DataProperty(obda:CAP))
Declaration(DataProperty(obda:DUG))
Declaration(DataProperty(obda:ID_veicolo))
Declaration(DataProperty(obda:carrozzeria))
Declaration(DataProperty(obda:cilindrata))
Declaration(DataProperty(obda:classe_veicolo))
Declaration(DataProperty(obda:codice_ID_a_fini_fiscali))
Declaration(DataProperty(obda:codice_fiscale))
Declaration(DataProperty(obda:codice_omologazione))
Declaration(DataProperty(obda:codice_postale_estero))
Declaration(DataProperty(obda:codice_tipo_ultima_formalita_di_parte))
Declaration(DataProperty(obda:cognome_persona))
Declaration(DataProperty(obda:combustibile))
Declaration(DataProperty(obda:consumo_combustibile))
Declaration(DataProperty(obda:coppia_massima))
Declaration(DataProperty(obda:data_accettazione_ultima_formalita_di_parte))
Declaration(DataProperty(obda:data_consegna_al_concessionario))
Declaration(DataProperty(obda:data_consegna_al_demolitore))
Declaration(DataProperty(obda:data_di_fondazione))
Declaration(DataProperty(obda:data_di_nascita))
Declaration(DataProperty(obda:data_immatricolazione))
Declaration(DataProperty(obda:data_inizio_sospensione_circolazione))
Declaration(DataProperty(obda:data_perdita_di_possesso))
Declaration(DataProperty(obda:data_rinnovo_ipoteca))
Declaration(DataProperty(obda:data_scadenza_ipoteca))
Declaration(DataProperty(obda:data_variazione_alimentazione))
Declaration(DataProperty(obda:descrizione_denotazione_di_luogo))
Declaration(DataProperty(obda:descrizione_specialita))
Declaration(DataProperty(obda:descrizione_tipo_ultima_formalita_di_parte))
Declaration(DataProperty(obda:destinazione_di_uso))
Declaration(DataProperty(obda:dispositivo_ecologico))
Declaration(DataProperty(obda:emissioni_co2))
Declaration(DataProperty(obda:fuoristrada))
Declaration(DataProperty(obda:hp))
Declaration(DataProperty(obda:importo_a_concorrenza_per_vincolo))
Declaration(DataProperty(obda:importo_complessivo_del_credito))
Declaration(DataProperty(obda:importo_quota_capitale_ipoteca))
Declaration(DataProperty(obda:importo_quota_interessi_ipoteca))
Declaration(DataProperty(obda:indicatore_km))
Declaration(DataProperty(obda:indirizzo_estero))
Declaration(DataProperty(obda:kw))
Declaration(DataProperty(obda:larghezza))
Declaration(DataProperty(obda:lunghezza))
Declaration(DataProperty(obda:massa_in_ordine_di_marcia))
Declaration(DataProperty(obda:massa_massima_tecnicamente_ammissibile))
Declaration(DataProperty(obda:nome_persona))
Declaration(DataProperty(obda:numero_assi))
Declaration(DataProperty(obda:numero_cilindri))
Declaration(DataProperty(obda:numero_civico))
Declaration(DataProperty(obda:numero_targa))
Declaration(DataProperty(obda:numero_telaio))
Declaration(DataProperty(obda:partita_IVA))
Declaration(DataProperty(obda:peso_complessivo))
Declaration(DataProperty(obda:portata))
Declaration(DataProperty(obda:posti_a_sedere))
Declaration(DataProperty(obda:posti_in_piedi))
Declaration(DataProperty(obda:ragione_sociale))
Declaration(DataProperty(obda:regime_di_coppia_massima))
Declaration(DataProperty(obda:regime_di_potenza_massima))
Declaration(DataProperty(obda:revisione_entro_data))
Declaration(DataProperty(obda:serie_targa))
Declaration(DataProperty(obda:sesso))
Declaration(DataProperty(obda:sospensioni_pneumatiche))
Declaration(DataProperty(obda:tara))
Declaration(DataProperty(obda:tipo_cessazione_circolazione))
Declaration(DataProperty(obda:tipo_credito))
Declaration(DataProperty(obda:tipo_di_luogo))
Declaration(DataProperty(obda:tipo_di_veicolo))
Declaration(DataProperty(obda:tipo_di_veicolo_classificazione_ACI))
Declaration(DataProperty(obda:tipo_motore))
Declaration(DataProperty(obda:tipo_omologato))
Declaration(DataProperty(obda:tipo_perdita_di_possesso))
Declaration(DataProperty(obda:tipo_persona))
Declaration(DataProperty(obda:tipo_persona_giuridica))
Declaration(DataProperty(obda:tipo_vincolo_classificazione_ACI))
Declaration(DataProperty(obda:tipo_vincolo_o_gravame))
Declaration(DataProperty(obda:tipologia_destinazione_di_uso))
Declaration(DataProperty(obda:toponimo))
Declaration(DataProperty(obdaod:anno_statistica))
Declaration(DataProperty(obdaod:data_fine_validita_data_set))
Declaration(DataProperty(obdaod:data_inizio_validita_data_set))
Declaration(DataProperty(obdaod:ha_misura))
Declaration(DataProperty(obdaod:ha_misura_conteggio))
Declaration(DataProperty(geo:lat))
Declaration(DataProperty(geo:long))
Declaration(NamedIndividual(obda:ACI))
AnnotationAssertion(rdfs:comment dcterms:contributor "E' un ruolo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Una sua istanza associa ad una risorsa  (in questa ontologia un Dataset)  una entità (ad es., persona, organizazione) che partecipa alla sua realizzazione. L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
AnnotationAssertion(rdfs:comment dcterms:creator "E' un ruolo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Una sua istanza associa ad una risorsa  (in questa ontologia un Dataset)  l'entità (ad es., persona o organizazione) che è la principale responsabile della sua realizzazione. L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
SubObjectPropertyOf(dcterms:creator dcterms:contributor)
FunctionalObjectProperty(dcterms:creator)
AnnotationAssertion(rdfs:comment dcterms:license "E' un ruolo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Ogni sua istanza associa una risorsa (in questa ontologia un Dataset) ad una licenza di utilizzo ad essa applicata. Il ruolo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
ObjectPropertyRange(dcterms:license dcterms:LicenseDocument)
AnnotationAssertion(rdfs:comment dcterms:publisher "E' un ruolo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Una sua istanza associa ad una risorsa  (in questa ontologia un Dataset)  l'entità (ad es., persona o organizazione) che è responsabile della sua pubblicazione. L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalObjectProperty(dcterms:publisher)
AnnotationAssertion(rdfs:comment dcterms:rightsHolder "E' un ruolo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Una sua istanza associa ad una risorsa  (in questa ontologia un Dataset)  una entità (ad es., persona, organizazione o servizio) che detiene dei diritti (legali, di proprietà intellettuale, ecc.) sulla risorsa . L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
AnnotationAssertion(rdfs:comment obda:comune_residenza_in_applicazione_di_bollo_auto "﻿Questo ruolo associa una denotazione di indirizzo di residenza in una applicazione del tributo bollo auto  con il comune a cui si riferisce la denotazione di indirizzo."^^xsd:string)
FunctionalObjectProperty(obda:comune_residenza_in_applicazione_di_bollo_auto)
ObjectPropertyDomain(obda:comune_residenza_in_applicazione_di_bollo_auto obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto)
ObjectPropertyRange(obda:comune_residenza_in_applicazione_di_bollo_auto obda:Circoscrizione_comunale)
AnnotationAssertion(rdfs:comment obda:est_aggregata_in "Questo ruolo associa una alimentazione nella nomenclatura interna ACI (di maggiore dettaglio) con i nomi per le alimentazione utilizzati nei dataset pubblicati come open data (una alimentazione negli open data può aggregare più alimentazioni della nomenclatura interna)."^^xsd:string)
FunctionalObjectProperty(obda:est_aggregata_in)
ObjectPropertyDomain(obda:est_aggregata_in obda:Alimentazione)
ObjectPropertyRange(obda:est_aggregata_in obdaod:Alimentazione)
AnnotationAssertion(rdfs:comment obda:est_variato_in "Il ruolo est_variato_in associa una persona giuridica A ad una persona giuridica B (o anche più di una) in cui A si è modificato. Questo comprende il caso di una società o ente che modifica il suo assetto e le sue caratteristiche, società o enti che si fondono per generare un nuovo soggetto, società o enti che si dividono in più persone giuridiche, ecc.
Si consideri ad esempio il caso in cui due (o più) comuni si fondono per dare vita ad un nuovo comune, nell'ontologia ciascun comune che ha partecipato alla fusione sarà legato attraversio il ruolo est_variato_in alla risorsa che rappresenta il nuovo comune. Analogamente il caso di un comune che ha cambiato denominazione, oppure provincia (oppure entrambi). In tutti questi casi nell'ontologia ci sarà una nuova risorsa che rappresenta il comune dopo la variazione, ed a cui il comune prima della variazione è legato attraverso il ruolo est_variato_in."^^xsd:string)
ObjectPropertyDomain(obda:est_variato_in obda:Persona_giuridica)
ObjectPropertyRange(obda:est_variato_in obda:Persona_giuridica)
AnnotationAssertion(rdfs:comment obda:ha_alimentazione "Questo ruolo associa uno stato_di_veicolo (o rappresentato in formalità, o relativo ad un veicolo a motore) con l'alimentazione del veicolo."^^xsd:string)
FunctionalObjectProperty(obda:ha_alimentazione)
ObjectPropertyDomain(obda:ha_alimentazione ObjectUnionOf(obda:Stato_di_veicolo_rappresentato_in_formalita ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore)))
ObjectPropertyRange(obda:ha_alimentazione obda:Alimentazione)
AnnotationAssertion(rdfs:comment obda:ha_circoscrizione "Il ruolo ha_circoscrizione ogni nazione, ente territoriale o ufficio periferico alla circoscrizione territoriale che questi enti amministrano."^^xsd:string)
InverseFunctionalObjectProperty(obda:ha_circoscrizione)
ObjectPropertyDomain(obda:ha_circoscrizione obda:Ente_territoriale)
ObjectPropertyRange(obda:ha_circoscrizione obda:Circoscrizione)
AnnotationAssertion(rdfs:comment obda:ha_classificazione_Euro "Il ruolo ha_classificazione_Euro lega uno stato di veicolo alla classe euro ad esso relativa."^^xsd:string)
FunctionalObjectProperty(obda:ha_classificazione_Euro)
ObjectPropertyDomain(obda:ha_classificazione_Euro obda:Stato_di_veicolo)
ObjectPropertyRange(obda:ha_classificazione_Euro obda:Classe_Euro)
AnnotationAssertion(rdfs:comment obda:ha_denotazione "Il ruolo ha_denotazione lega ogni luogo nei suoi stati alle sue denotazioni, cioè ai vari possibili modi di denominare il luogo."^^xsd:string)
ObjectPropertyDomain(obda:ha_denotazione obda:Stato_di_luogo)
ObjectPropertyRange(obda:ha_denotazione obda:Denotazione_di_luogo)
AnnotationAssertion(rdfs:comment obda:ha_nazione "Questo ruolo lega uno stato di soggetto che sia uno stato di una regione, un comune, una provincia, o una città metropolitana alla nazione a cui appartiene. Il ruolo può anche direttamente associare una regione, un  comune, una provincia, o una città metropolitana ad una nazione. In questo caso l'associazione è da intendersi relativa alla nazione attuale rispettivamente della regione, del comune, della provincia o della città metropolitana."^^xsd:string)
FunctionalObjectProperty(obda:ha_nazione)
ObjectPropertyDomain(obda:ha_nazione ObjectUnionOf(obda:Regione ObjectUnionOf(ObjectUnionOf(obda:Citta_metropolitana obda:Provincia) ObjectUnionOf(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune)) ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) ObjectUnionOf(obda:Citta_metropolitana obda:Provincia))) ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Regione)))
ObjectPropertyRange(obda:ha_nazione obda:Nazione)
AnnotationAssertion(rdfs:comment obda:ha_provincia "Questo ruolo lega uno stato di soggetto che sia uno stato di comune, o direttamente un comune, alla provincia  o città metropolitana  a cui appartiene. Nel caso l'oggetto associato alla provincia sia un comune, questa associazione è da intendersi relativa alla provincia attuale del comune."^^xsd:string)
FunctionalObjectProperty(obda:ha_provincia)
ObjectPropertyDomain(obda:ha_provincia ObjectUnionOf(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune)))
ObjectPropertyRange(obda:ha_provincia ObjectUnionOf(obda:Citta_metropolitana obda:Provincia))
AnnotationAssertion(rdfs:comment obda:ha_regione "Questo ruolo lega uno stato di soggetto che sia uno stato di un comune, di una provincia, o di una città metropolitana alla regione a cui appartiene. Il ruolo può anche direttamente associare un comune, una provincia, o una città metropolitana ad una regione. In questo caso l'associazione è da intendersi relativa alla regione attuale rispettivamente del comune, della provincia o della città metropolitana."^^xsd:string)
FunctionalObjectProperty(obda:ha_regione)
ObjectPropertyDomain(obda:ha_regione ObjectUnionOf(ObjectUnionOf(obda:Citta_metropolitana obda:Provincia) ObjectUnionOf(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune)) ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) ObjectUnionOf(obda:Citta_metropolitana obda:Provincia))))
ObjectPropertyRange(obda:ha_regione obda:Regione)
AnnotationAssertion(rdfs:comment obda:ha_residenza "Il ruolo ha_residenza  lega un soggetto in un suo stato  al luogo  in cui esso ha la dimora abituale, la sua residenza (nessun soggetto può avere in un suo stesso stato sede  e residenza)."^^xsd:string)
ObjectPropertyDomain(obda:ha_residenza obda:Stato_di_soggetto)
ObjectPropertyDomain(obda:ha_residenza ObjectComplementOf(ObjectSomeValuesFrom(obda:ha_sede owl:Thing)))
ObjectPropertyRange(obda:ha_residenza obda:Luogo)
AnnotationAssertion(rdfs:comment obda:ha_residenza_in_accesso "E' una specializzazione di ha_residenza che associa uno stato di soggetto direttamente con l'accesso in cui il soggetto ha residenza in quello stato."^^xsd:string)
SubObjectPropertyOf(obda:ha_residenza_in_accesso obda:ha_residenza)
FunctionalObjectProperty(obda:ha_residenza_in_accesso)
ObjectPropertyRange(obda:ha_residenza_in_accesso obda:Accesso)
AnnotationAssertion(rdfs:comment obda:ha_residenza_in_comune "E' una specializzazione di ha_residenza che associa uno stato di soggetto direttamente con il comune in cui il soggetto ha residenza in quello stato."^^xsd:string)
SubObjectPropertyOf(obda:ha_residenza_in_comune obda:ha_residenza)
FunctionalObjectProperty(obda:ha_residenza_in_comune)
ObjectPropertyRange(obda:ha_residenza_in_comune obda:Circoscrizione_comunale)
AnnotationAssertion(rdfs:comment obda:ha_residenza_in_provincia "E' una specializzazione di ha_residenza che associa uno stato di soggetto direttamente con la provincia in cui il soggetto ha residenza in quello stato."^^xsd:string)
SubObjectPropertyOf(obda:ha_residenza_in_provincia obda:ha_residenza)
FunctionalObjectProperty(obda:ha_residenza_in_provincia)
ObjectPropertyRange(obda:ha_residenza_in_provincia obda:Circoscrizione_provinciale)
AnnotationAssertion(rdfs:comment obda:ha_residenza_in_regione "E' una specializzazione di ha_residenza che associa uno stato di soggetto direttamente con la regione in cui il soggetto ha residenza in quello stato."^^xsd:string)
SubObjectPropertyOf(obda:ha_residenza_in_regione obda:ha_residenza)
FunctionalObjectProperty(obda:ha_residenza_in_regione)
ObjectPropertyRange(obda:ha_residenza_in_regione obda:Circoscrizione_regionale)
AnnotationAssertion(rdfs:comment obda:ha_sede "Il ruolo ha_sede  lega un soggetto in un suo stato  ad un luogo  in cui esso svolge certi suoi affari o interessi (nessun soggetto può avere in un suo stesso stato sede e residenza )."^^xsd:string)
ObjectPropertyDomain(obda:ha_sede obda:Stato_di_soggetto)
ObjectPropertyRange(obda:ha_sede obda:Accesso)
AnnotationAssertion(rdfs:comment obda:ha_sede_legale "Il ruolo ha_sede_legale  specializza il ruolo ha_sede  una persona giuridica  in un suo stato  al luogo  che ne costituisce la sede legale. L'articolo 46 del Codice civile italiano stabilisce la necessità di un luogo di riferimento per ogni persona giuridica, la \"sede legale\" appunto: \"Quando la legge fa dipendere determinati effetti dalla residenza o dal domicilio, per le persone giuridiche si ha riguardo al luogo in cui è stabilita la loro sede.\""^^xsd:string)
SubObjectPropertyOf(obda:ha_sede_legale obda:ha_sede)
FunctionalObjectProperty(obda:ha_sede_legale)
AnnotationAssertion(rdfs:comment obda:ha_stato "Il ruolo ha_stato  lega ogni oggetto ai suoi stati."^^xsd:string)
InverseFunctionalObjectProperty(obda:ha_stato)
AnnotationAssertion(rdfs:comment obda:ha_stato_di_luogo "Il ruolo ha_stato_di_luogo  specializza ha_stato  in quanto lega ogni luogo  ai suoi stati ."^^xsd:string)
SubObjectPropertyOf(obda:ha_stato_di_luogo obda:ha_stato)
InverseFunctionalObjectProperty(obda:ha_stato_di_luogo)
ObjectPropertyDomain(obda:ha_stato_di_luogo obda:Luogo)
ObjectPropertyRange(obda:ha_stato_di_luogo obda:Stato_di_luogo)
AnnotationAssertion(rdfs:comment obda:ha_stato_di_soggetto "Il ruolo ha_stato_di_soggetto  specializza ha_stato  in quanto lega ogni soggetto  ai suoi stati ."^^xsd:string)
SubObjectPropertyOf(obda:ha_stato_di_soggetto obda:ha_stato)
InverseFunctionalObjectProperty(obda:ha_stato_di_soggetto)
ObjectPropertyDomain(obda:ha_stato_di_soggetto obda:Soggetto)
ObjectPropertyRange(obda:ha_stato_di_soggetto obda:Stato_di_soggetto)
AnnotationAssertion(rdfs:comment obda:ha_stato_di_veicolo "Il ruolo ha_stato_di_veicolo specializza ha_stato in quanto lega ogni veicolo con il suo stato corrente ed i suoi stati passati (rappresentati attraverso il concetto Stato_di_veicolo). Al momento della creazione di un nuovo veicolo v, un nuovo stato di veicolo sv verrà associato a v, generando una nuova istanza del ruolo ha_stato_di_veicolo. Inizialmente, v disporrà di uno stato iniziale unico (cioè il veicolo non disporrà di fatto di nessuno stato passato). Non appena una delle sue proprietà rilevanti \"non rigide\" varia, verrà creata una nuova istanza del ruolo ha_stato_di_veicolo, imponendo una temporizzazione dei suoi stati passati. Si rimanda al ruolo ha_stato per un approfondimento sulla semantica della modellazione dell'evoluzione nel tempo attraverso la nozione di stato."^^xsd:string)
SubObjectPropertyOf(obda:ha_stato_di_veicolo obda:ha_stato)
InverseFunctionalObjectProperty(obda:ha_stato_di_veicolo)
ObjectPropertyDomain(obda:ha_stato_di_veicolo obda:Veicolo)
ObjectPropertyRange(obda:ha_stato_di_veicolo obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:ha_targa "Il ruolo ha_targa  lega un veicolo in un suo stato  alla sua targa ."^^xsd:string)
FunctionalObjectProperty(obda:ha_targa)
ObjectPropertyDomain(obda:ha_targa obda:Stato_di_veicolo)
ObjectPropertyRange(obda:ha_targa obda:Targa_veicolo)
AnnotationAssertion(rdfs:comment obda:ha_targa_precedente "Questa relazione lega lo stato di un veicolo  con la sua targa  precedente."^^xsd:string)
FunctionalObjectProperty(obda:ha_targa_precedente)
ObjectPropertyDomain(obda:ha_targa_precedente obda:Stato_di_veicolo)
ObjectPropertyRange(obda:ha_targa_precedente obda:Targa_veicolo)
AnnotationAssertion(rdfs:comment obda:ha_vincolo_o_gravame "Questo ruolo associa uno stato con vincoli o gravami ai vincoli o gravami a cui il veicolo  è soggetto in quello stato."^^xsd:string)
ObjectPropertyDomain(obda:ha_vincolo_o_gravame obda:Stato_con_vincoli_o_gravami)
ObjectPropertyRange(obda:ha_vincolo_o_gravame obda:Vincolo_o_gravame)
AnnotationAssertion(rdfs:comment obda:ipoteca_ha_creditore "Il ruolo ipoteca_ha_creditore  lega uno stato con ipoteca  al creditore  della corrispondente ipoteca."^^xsd:string)
ObjectPropertyDomain(obda:ipoteca_ha_creditore obda:Stato_con_ipoteca_o_privilegio)
ObjectPropertyRange(obda:ipoteca_ha_creditore obda:Soggetto)
AnnotationAssertion(rdfs:comment obda:partecipa_a_luogo "Questo ruolo lega lo stato di un luogo con i luoghi a cui questo stato appartiene o è appartenuto.
Si noti che questo ruolo lega stati di luoghi con dei luoghi, e non luoghi con altri luoghi. Ad esempio la Circoscrizione Comunale Di Arzachena ha partecipato al luogo Circoscrizione Comunale Di Sassari in un suo stato passato. Nello stato successivo, per via della istituzione della Provincia di Olbia-Tempio, essa partecipa al diverso luogo Circoscrizione Provinciale Di Olbia-Tempio."^^xsd:string)
ObjectPropertyDomain(obda:partecipa_a_luogo obda:Stato_di_luogo)
ObjectPropertyRange(obda:partecipa_a_luogo obda:Luogo)
AnnotationAssertion(rdfs:comment obda:pignoramento_ha_creditore "Il ruolo pignoramento_ha_creditore  lega uno stato con pignoramento  al creditore  del corrispondente pignoramento."^^xsd:string)
ObjectPropertyDomain(obda:pignoramento_ha_creditore obda:Stato_con_pignoramento)
ObjectPropertyRange(obda:pignoramento_ha_creditore obda:Soggetto)
AnnotationAssertion(rdfs:comment obda:proviene_da_veicolo "Il ruolo proviene_da_veicolo  lega un veicolo ad un altro veicolo da cui il primo ha avuto origine. La provenienza di un veicolo da un altro si manifesta quando vengono modificate le caratteristiche identificative del veicolo originale, in modo tale che quest'utlimo a valle delle modifiche venga considerato un nuovo veicolo. Attraverso il ruolo proviene_da_veicolo si può comunque tenere traccia del legame esistente fra i due veicoli."^^xsd:string)
FunctionalObjectProperty(obda:proviene_da_veicolo)
InverseFunctionalObjectProperty(obda:proviene_da_veicolo)
ObjectPropertyDomain(obda:proviene_da_veicolo obda:Veicolo)
ObjectPropertyRange(obda:proviene_da_veicolo obda:Veicolo)
AnnotationAssertion(rdfs:comment obda:provincia_residenza_in_applicazione_di_bollo_auto "Questo ruolo indica la provincia nell'ambito di un indirizzo di residenza, così come denotato in una applicazione del tributo bollo auto."^^xsd:string)
FunctionalObjectProperty(obda:provincia_residenza_in_applicazione_di_bollo_auto)
ObjectPropertyDomain(obda:provincia_residenza_in_applicazione_di_bollo_auto obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto)
ObjectPropertyRange(obda:provincia_residenza_in_applicazione_di_bollo_auto obda:Circoscrizione_provinciale)
AnnotationAssertion(rdfs:comment obda:rappresentazione_fatta_da "Il ruolo rappresentazione fatta da  lega uno stato rappresentato  al soggetto che lo rappresenta."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:regione_residenza_in_applicazione_di_bollo_auto "Questo ruolo indica la regione nell'ambito di un indirizzo di residenza, così come denotato in una applicazione del tributo bollo auto."^^xsd:string)
FunctionalObjectProperty(obda:regione_residenza_in_applicazione_di_bollo_auto)
ObjectPropertyDomain(obda:regione_residenza_in_applicazione_di_bollo_auto obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto)
ObjectPropertyRange(obda:regione_residenza_in_applicazione_di_bollo_auto obda:Circoscrizione_regionale)
AnnotationAssertion(rdfs:comment obda:registrazione_comune "Questo ruolo associa una denotazione_indirizzo_per_soggetto_in_veicolo con il comune a cui si riferisce la denotazione di indirizzo."^^xsd:string)
FunctionalObjectProperty(obda:registrazione_comune)
ObjectPropertyDomain(obda:registrazione_comune obda:Denotazione_indirizzo_per_soggetto_in_veicolo)
ObjectPropertyRange(obda:registrazione_comune obda:Circoscrizione_comunale)
AnnotationAssertion(rdfs:comment obda:registrazione_nazione "Questo ruolo associa una denotazione_indirizzo_per_soggetto_in_veicolo con la nazione a cui si riferisce la denotazione di indirizzo."^^xsd:string)
FunctionalObjectProperty(obda:registrazione_nazione)
ObjectPropertyDomain(obda:registrazione_nazione obda:Denotazione_indirizzo_per_soggetto_in_veicolo)
ObjectPropertyRange(obda:registrazione_nazione obda:Circoscrizione_nazionale)
AnnotationAssertion(rdfs:comment obda:registrazione_provincia "Questo ruolo associa una denotazione_indirizzo_per_soggetto_in_veicolo con la provincia a cui si riferisce la denotazione di indirizzo."^^xsd:string)
FunctionalObjectProperty(obda:registrazione_provincia)
ObjectPropertyDomain(obda:registrazione_provincia obda:Denotazione_indirizzo_per_soggetto_in_veicolo)
ObjectPropertyRange(obda:registrazione_provincia obda:Circoscrizione_provinciale)
AnnotationAssertion(rdfs:comment obda:registrazione_regione "Questo ruolo associa una denotazione_indirizzo_per_soggetto_in_veicolo con la regione a cui si riferisce la denotazione di indirizzo."^^xsd:string)
FunctionalObjectProperty(obda:registrazione_regione)
ObjectPropertyDomain(obda:registrazione_regione obda:Denotazione_indirizzo_per_soggetto_in_veicolo)
ObjectPropertyRange(obda:registrazione_regione obda:Circoscrizione_regionale)
AnnotationAssertion(rdfs:comment obda:stato_comunicato_a "Il ruolo stato_comunicato_a  lega uno stato con comunicazione  all'agente destinatario della comunicazione. Tutti gli stati del mondo che sono con comunicazione partecipano a questo ruolo."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:veicolo_ha_targhe_assegnate "Il ruolo veicolo_ha_targhe_assegnate  lega ogni veicolo  alle targhe  che gli sono state assegnate nel corso della sua esistenza."^^xsd:string)
InverseFunctionalObjectProperty(obda:veicolo_ha_targhe_assegnate)
ObjectPropertyDomain(obda:veicolo_ha_targhe_assegnate obda:Veicolo)
ObjectPropertyRange(obda:veicolo_ha_targhe_assegnate obda:Targa_veicolo)
AnnotationAssertion(rdfs:comment obdaod:basato_su "Questo ruolo collega le osservazioni con quei concetti che sono coinvolti nel fatto denotato dall'osservazione. Ad esempio, nel caso di osservazioni che riportano il numero di prime iscrizioni al PRA di autovetture in un determinato anno, aggregate per comune, questo ruolo collega ciascuna osservazione a tutte le formalità di prime iscrizioni relative allo specifico comune dell'osservazione (nell'anno di riferimento del dataset)."^^xsd:string)
ObjectPropertyDomain(obdaod:basato_su obdaod:Osservazione)
AnnotationAssertion(rdfs:comment obdaod:compare_in_dataset "Questo ruolo associa un qualunque oggetto dell'ontologia ai dataset in cui questo oggetto compare. Ad esempio, il comune di Roma è associato tramite questo ruolo ad un certo dataset perchè è usato come valore di una dimensione usata nel dataset (e.g., dimensione Comune)."^^xsd:string)
ObjectPropertyRange(obdaod:compare_in_dataset obdaod:DataSet)
AnnotationAssertion(rdfs:comment obdaod:contiene_osservazione "Questo ruolo associa ogni dataset  alle osservazioni che di questo fanno parte."^^xsd:string)
ObjectPropertyDomain(obdaod:contiene_osservazione obdaod:DataSet)
ObjectPropertyRange(obdaod:contiene_osservazione obdaod:Osservazione)
AnnotationAssertion(rdfs:comment obdaod:ha_proprieta_dimensionale "Questo ruolo associa una osservazione statistica ai valori relativi alle sue dimensioni (che insieme concorrono ad identificare l'osservazione stessa)"^^xsd:string)
ObjectPropertyDomain(obdaod:ha_proprieta_dimensionale obdaod:Osservazione_statistica)
AnnotationAssertion(rdfs:comment obdaod:ha_proprieta_dimensionale_Euro "Questo ruolo associa ogni osservazione di tipo Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro  alla classe euro relativa."^^xsd:string)
SubObjectPropertyOf(obdaod:ha_proprieta_dimensionale_Euro obdaod:ha_proprieta_dimensionale)
FunctionalObjectProperty(obdaod:ha_proprieta_dimensionale_Euro)
ObjectPropertyRange(obdaod:ha_proprieta_dimensionale_Euro obda:Classe_Euro)
AnnotationAssertion(rdfs:comment obdaod:ha_proprieta_dimensionale_alimentazione "Questo ruolo associa ogni osservazione di tipo Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione alla alimentazione relativa."^^xsd:string)
SubObjectPropertyOf(obdaod:ha_proprieta_dimensionale_alimentazione obdaod:ha_proprieta_dimensionale)
FunctionalObjectProperty(obdaod:ha_proprieta_dimensionale_alimentazione)
ObjectPropertyRange(obdaod:ha_proprieta_dimensionale_alimentazione obdaod:Alimentazione)
AnnotationAssertion(rdfs:comment obdaod:ha_proprieta_dimensionale_ente_territoriale "Questo ruolo associa ogni osservazione di tipo Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione o Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro all'ente territoriale relativo."^^xsd:string)
SubObjectPropertyOf(obdaod:ha_proprieta_dimensionale_ente_territoriale obdaod:ha_proprieta_dimensionale)
FunctionalObjectProperty(obdaod:ha_proprieta_dimensionale_ente_territoriale)
ObjectPropertyRange(obdaod:ha_proprieta_dimensionale_ente_territoriale obda:Ente_territoriale)
AnnotationAssertion(rdfs:comment dcterms:abstract "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Denota una breve descrizione di una risorsa (in questa ontologia, un Dataset). L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:abstract)
DataPropertyDomain(dcterms:abstract obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:available "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Indica la data da cui è disponibile, o sarà disponibile, una risorsa (in questa ontologia un Dataset). L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:available)
DataPropertyDomain(dcterms:available obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:bibliographicCitation "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Indica il riferimento bibliografico per la risorsa a cui è associata (in questa ontologia, un Dataset), fornisce quindi sufficienti informaizoni perchè la risorsa possa essere citata in documenti o pubblicazioni. L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:bibliographicCitation)
DataPropertyDomain(dcterms:bibliographicCitation obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:description "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Un suo valore è una descrizione testuale della risorsa a cui si riferisce (in questa ontologia un Dataset). L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:description)
DataPropertyDomain(dcterms:description obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:format "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Indica il formato in cui è disponibile una risorsa (in questa ontologia un Dataset). L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
DataPropertyDomain(dcterms:format obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:identifier "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Un suo valore è una stringa in grado di identificare la risorsa a cui si riferisce (in questa ontologia un Dataset), nel senso che sarà unica per quella risorsa. L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:identifier)
DataPropertyDomain(dcterms:identifier obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:issued "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Indica la data di rilascio (ad esempio di pubblicazione) della risorsa a cui si riferisce (in questa ontologia un Dataset). L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:issued)
DataPropertyDomain(dcterms:issued obdaod:DataSet)
AnnotationAssertion(rdfs:comment dcterms:title "E' un attributo importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Un suo valore è una stringa che rappresenta il nome associato alla risorsa a cui si riferisce (in questa ontologia un Dataset), nel senso che sarà unica per quella risorsa. L'attributo è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
FunctionalDataProperty(dcterms:title)
DataPropertyDomain(dcterms:title obdaod:DataSet)
AnnotationAssertion(rdfs:comment obda:CAP "Il Codice di Avviamento Postale (CAP)  di una denotazione di luogo  è la parte della denotazione usata dalle società operanti nel campo dei servizi postali per facilitare l'individuazione del luogo di destinazione della corrispondenza. E' stato introdotto nel 1967. E' formato, com'è noto, da cinque cifre. ."^^xsd:string)
FunctionalDataProperty(obda:CAP)
DataPropertyDomain(obda:CAP obda:Denotazione_di_luogo)
AnnotationAssertion(rdfs:comment obda:DUG "L'attributo DUG  (Denominazione Urbanistica Generica) stabilisce la tipologia di toponimo usata in una denotazione di luogo  . 
Esempi comuni di DUG sono: 
belvedere
borgata
borgo
calle
canale
cavalcavia
circonvallazione
clivo
corso
frazione
largo
lido
litoranea
piazza
piazzale
ponte
rampa
rione
rotonda
strada
tronco
via
viale
vicolo
Alcuni DUG sono caratteristici di certe città  italiane, come ad esempio:
 lungotevere, ovvero \"viale\" che costeggia il fiume Tevere, sono 43 a Roma."^^xsd:string)
FunctionalDataProperty(obda:DUG)
DataPropertyDomain(obda:DUG obda:Denotazione_di_luogo)
AnnotationAssertion(rdfs:comment obda:ID_veicolo "Questo attributo riporta il codice identificativo del dato veicolo ."^^xsd:string)
FunctionalDataProperty(obda:ID_veicolo)
DataPropertyDomain(obda:ID_veicolo obda:Veicolo)
AnnotationAssertion(rdfs:comment obda:carrozzeria "L'attributo descrizione_carrozzeria  riporta la descrizione in linguaggio naturale della carrozzeria del veicolo , astraendo dal colore e dallo stato di conservazione della stessa. Tale attributo raccoglie forma, design e dimensioni che la carrozzeria assume anche in ragione del tipo di veicolo e della funzione ad esso adibita.Esempi per autovetture : Berlina, Coupé, Familiare, SUV, Spider, Pick-up, Limousine. ."^^xsd:string)
FunctionalDataProperty(obda:carrozzeria)
DataPropertyDomain(obda:carrozzeria obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:cilindrata "La cilindrata  di un veicolo con motore a combustione interna  è pari alla cilindrata di tale suo motore. In particolare essa è ottenuta moltiplicando la cilindrata unitaria (ovvero il volume generato da un cilindro durante la corsa) per il numero dei cilindri. ."^^xsd:string)
FunctionalDataProperty(obda:cilindrata)
DataPropertyDomain(obda:cilindrata ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_motore_a_combustione))
AnnotationAssertion(rdfs:comment obda:classe_veicolo "La classe veicolo  indica la classe di appartenenza di un veicolo , a seconda della classificazione dei veicolo  adottata dal Codice della Strada.
Alcuni esempi di classi di un veicolo  sono le seguenti:
veicolo a trazione di veicolo a motore ;
veicolo a trazione animale o braccia;
velocipede;
slitte;
ciclomotori ;
motoveicoli ;
autoveicoli ;
filoveicoli;
rimorchi ;
macchine agricole ;
macchine operatrici;
veicoli con caratteristiche atipiche.
In particolare, le classi dei veicoli a motore  e dei rimorchi  possono essere ulteriormente suddivise in sottoclassi, secondo delle categorie internazionali. ."^^xsd:string)
FunctionalDataProperty(obda:classe_veicolo)
DataPropertyDomain(obda:classe_veicolo obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:codice_ID_a_fini_fiscali "Questo attributo denota un codice identificativo ai fini fiscali. Pertanto, generalizza sia il codice fiscale che la partita IVA."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:codice_fiscale "L'attributo codice_fiscale  lega ogni persona fisica  o giuridica  al suo codice fiscale. ."^^xsd:string)
SubDataPropertyOf(obda:codice_fiscale obda:codice_ID_a_fini_fiscali)
FunctionalDataProperty(obda:codice_fiscale)
DataPropertyDomain(obda:codice_fiscale ObjectUnionOf(ObjectUnionOf(obda:Persona_fisica obda:Stato_di_persona_fisica) ObjectUnionOf(obda:Persona_giuridica obda:Stato_di_persona_giuridica)))
AnnotationAssertion(rdfs:comment obda:codice_omologazione "Questo attributo contiene un codice interno che identifica la tipologia di omologazione di un veicolo . ."^^xsd:string)
FunctionalDataProperty(obda:codice_omologazione)
DataPropertyDomain(obda:codice_omologazione ObjectUnionOf(obda:Veicolo_con_numero_di_telaio ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_numero_di_telaio)))
AnnotationAssertion(rdfs:comment obda:codice_postale_estero "Questo attributo denota codici postali non italiani. Ad esempio, se riferito a denotazioni di luogo degli USA coincide con il codice ZIP (Zoning improvement Plan code)."^^xsd:string)
FunctionalDataProperty(obda:codice_postale_estero)
DataPropertyDomain(obda:codice_postale_estero obda:Denotazione_di_luogo_estero)
AnnotationAssertion(rdfs:comment obda:codice_tipo_ultima_formalita_di_parte "Indica il codice del tipo dell'ultima formalità di parte (effettuata cioè su richiesta di un utente) per gli stati di veicoli  rappresentati dal PRA."^^xsd:string)
FunctionalDataProperty(obda:codice_tipo_ultima_formalita_di_parte)
DataPropertyDomain(obda:codice_tipo_ultima_formalita_di_parte ObjectIntersectionOf(obda:Stato_di_veicolo obda:Stato_rappresentato_dal_PRA))
AnnotationAssertion(rdfs:comment obda:cognome_persona "L'attributo cognome_di_persona  lega ogni persona fisica  al suo cognome. ."^^xsd:string)
FunctionalDataProperty(obda:cognome_persona)
DataPropertyDomain(obda:cognome_persona ObjectUnionOf(obda:Persona_fisica obda:Stato_di_persona_fisica))
AnnotationAssertion(rdfs:comment obda:combustibile "Questo attributo indica il tipo di combustibile utilizzato da un veicolo  in un suo stato ."^^xsd:string)
FunctionalDataProperty(obda:combustibile)
DataPropertyDomain(obda:combustibile ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_motore_a_combustione))
AnnotationAssertion(rdfs:comment obda:consumo_combustibile "Il combustibile  di un veicolo a motore  in un suo stato  è il tipo di materiale utilizzato dal suo motore come combustibile. In particolare:
per i motori a scoppio può essere benzina, GPL, o altri derivati dal petrolio;
per i motori diesel è gasolio. 
."^^xsd:string)
FunctionalDataProperty(obda:consumo_combustibile)
DataPropertyDomain(obda:consumo_combustibile ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_motore_a_combustione))
AnnotationAssertion(rdfs:comment obda:coppia_massima "La coppia motrice massima  di un veicolo a motore  in un suo stato  è la coppia motrice massima del suo motore. 
Si ricorda che:
il momento meccanico esprime l'attitudine di una forza ad imprimere una rotazione ad un corpo rigido intorno ad un asse;
la coppia motrice è il momento meccanico applicato da un motore ad una trasmissione;
essa varia al varare del regime di rotazione; ha il suo valore massimo in corrispondenza di un certo regime.
."^^xsd:string)
FunctionalDataProperty(obda:coppia_massima)
DataPropertyDomain(obda:coppia_massima ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore))
AnnotationAssertion(rdfs:comment obda:data_accettazione_ultima_formalita_di_parte "Indica la data di accettazione dell'ultima formalità di parte (effettuata cioè su richiesta di un utente) per gli stati di veicoli  rappresentati dal PRA."^^xsd:string)
FunctionalDataProperty(obda:data_accettazione_ultima_formalita_di_parte)
DataPropertyDomain(obda:data_accettazione_ultima_formalita_di_parte ObjectIntersectionOf(obda:Stato_di_veicolo obda:Stato_rappresentato_dal_PRA))
AnnotationAssertion(rdfs:comment obda:data_consegna_al_concessionario "Indica la data di consegna di un veicolo a un concessionario/rivenditore auto."^^xsd:string)
FunctionalDataProperty(obda:data_consegna_al_concessionario)
DataPropertyDomain(obda:data_consegna_al_concessionario obda:Stato_di_cessazione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:data_consegna_al_demolitore "Indica la data in cui il veicolo (nel suo stato di cessazione dalla circolazione) è stato consegnato al demolitore."^^xsd:string)
FunctionalDataProperty(obda:data_consegna_al_demolitore)
DataPropertyDomain(obda:data_consegna_al_demolitore obda:Stato_di_cessazione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:data_di_fondazione "L'attributo data_di_fondazione  lega ogni persona giuridica  alla sua data di fondazione. ."^^xsd:string)
FunctionalDataProperty(obda:data_di_fondazione)
DataPropertyDomain(obda:data_di_fondazione ObjectUnionOf(obda:Persona_giuridica obda:Stato_di_persona_giuridica))
AnnotationAssertion(rdfs:comment obda:data_di_nascita "L'attributo data_di_nascita  lega ogni persona fisica  alla sua data di nascita. 
."^^xsd:string)
FunctionalDataProperty(obda:data_di_nascita)
DataPropertyDomain(obda:data_di_nascita ObjectUnionOf(obda:Persona_fisica obda:Stato_di_persona_fisica))
AnnotationAssertion(rdfs:comment obda:data_immatricolazione "Questo attributo indica la data in cui un veicolo è stato immatricolato. Può riguardare veicoli nuovi o anche veicoli che erano già stati immatricolati all'estero che vengono immatricolati per la prima volta in Italia."^^xsd:string)
FunctionalDataProperty(obda:data_immatricolazione)
DataPropertyDomain(obda:data_immatricolazione ObjectUnionOf(obda:Veicolo_con_numero_di_telaio ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_numero_di_telaio)))
AnnotationAssertion(rdfs:comment obda:data_inizio_sospensione_circolazione "L'attributo data inizio sospensione circolazione  indica la data in cui ha inizio lo stato  di un veicolo nel quale il veicolo stesso è sottoposto al vincolo di non poter circolare."^^xsd:string)
FunctionalDataProperty(obda:data_inizio_sospensione_circolazione)
DataPropertyDomain(obda:data_inizio_sospensione_circolazione obda:Stato_con_sospensione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:data_perdita_di_possesso "L'attributo data perdita di possesso  indica la data in cui il proprietario  di un veicolo  ne ha perso il possesso."^^xsd:string)
FunctionalDataProperty(obda:data_perdita_di_possesso)
DataPropertyDomain(obda:data_perdita_di_possesso obda:Stato_con_perdita_di_possesso)
AnnotationAssertion(rdfs:comment obda:data_rinnovo_ipoteca "La data di rinnovo  di un' ipoteca in uno stato di un veicolo  è la data del suo rinnovo (non coincide necessariamente con la data_inizio  dello stato). 
."^^xsd:string)
FunctionalDataProperty(obda:data_rinnovo_ipoteca)
DataPropertyDomain(obda:data_rinnovo_ipoteca obda:Stato_con_ipoteca_o_privilegio)
AnnotationAssertion(rdfs:comment obda:data_scadenza_ipoteca "La data di scadenza  di un' ipoteca in uno stato di veicolo  è la data della sua scadenza (non coincide necessariamente con la fine  dello stato). 
."^^xsd:string)
FunctionalDataProperty(obda:data_scadenza_ipoteca)
DataPropertyDomain(obda:data_scadenza_ipoteca obda:Stato_con_ipoteca_o_privilegio)
AnnotationAssertion(rdfs:comment obda:data_variazione_alimentazione "Se il veicolo (in un suo stato) ha subito una variazione dell'alimentazione, indica la data in cui l'alimentazione è stata variata."^^xsd:string)
FunctionalDataProperty(obda:data_variazione_alimentazione)
DataPropertyDomain(obda:data_variazione_alimentazione obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:descrizione_denotazione_di_luogo "Questo attributo contiene una descrizione generica della denotazione di un luogo . E' di particolare interesse soprattutto per le denotazioni di luoghi esteri."^^xsd:string)
FunctionalDataProperty(obda:descrizione_denotazione_di_luogo)
DataPropertyDomain(obda:descrizione_denotazione_di_luogo obda:Denotazione_di_luogo)
AnnotationAssertion(rdfs:comment obda:descrizione_specialita "Questo attributo riporta, se presente, la descrizione della specialità del dato veicolo  nel suo stato . Esempi di specialità sono 2trasporto Handicappati\", \"Trasporto eccezionale\", \"Mototrattori\", etc."^^xsd:string)
FunctionalDataProperty(obda:descrizione_specialita)
DataPropertyDomain(obda:descrizione_specialita obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:descrizione_tipo_ultima_formalita_di_parte "Indica la descrizione testuale del tipo dell'ultima formalità di parte (effettuata cioè su richiesta di un utente) per gli stati di veicoli  rappresentati dal PRA."^^xsd:string)
FunctionalDataProperty(obda:descrizione_tipo_ultima_formalita_di_parte)
DataPropertyDomain(obda:descrizione_tipo_ultima_formalita_di_parte ObjectIntersectionOf(obda:Stato_di_veicolo obda:Stato_rappresentato_dal_PRA))
AnnotationAssertion(rdfs:comment obda:destinazione_di_uso "Questo attributo fornisce una descrizione della destinazione di uso del dato veicolo  nel suo stato ."^^xsd:string)
FunctionalDataProperty(obda:destinazione_di_uso)
DataPropertyDomain(obda:destinazione_di_uso obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:dispositivo_ecologico "L'attributo dispositivo_ecologico  lega uno stato di veicolo  alla descrizione in linguaggio naturale dell'eventuale dispositivo installato per ridurne le emissioni inquinanti (ad esempio marmitta catalitica, per la conformità Euro1). ."^^xsd:string)
FunctionalDataProperty(obda:dispositivo_ecologico)
DataPropertyDomain(obda:dispositivo_ecologico obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:emissioni_co2 "L'attributo emissioni_co2  di un veicolo a motore  a combustione interna esprime la quantità di biossido di carbonio (CO2) emessa dal veicolo per kg di combustibile consumato."^^xsd:string)
FunctionalDataProperty(obda:emissioni_co2)
DataPropertyDomain(obda:emissioni_co2 ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_motore_a_combustione))
AnnotationAssertion(rdfs:comment obda:fuoristrada "Questo attributo indica se il veicolo  è equipaggiato con un allestimento da fuoristrada."^^xsd:string)
FunctionalDataProperty(obda:fuoristrada)
DataPropertyDomain(obda:fuoristrada obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:hp "Questo attributo riporta la potenza in cavalli del veicolo ."^^xsd:string)
FunctionalDataProperty(obda:hp)
DataPropertyDomain(obda:hp ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore))
AnnotationAssertion(rdfs:comment obda:importo_a_concorrenza_per_vincolo "L'importo a concorrenza  di uno stato di veicolo con vincoli o gravami  (ad esempio, con un fermo amministrativo  è l'importo che il proprietario  del veicolo deve ad un creditore (ad esempio allo Stato nel caso di un fermo amministrativo) e che ha determinato il divieto alla circolazione per il veicolo stesso."^^xsd:string)
FunctionalDataProperty(obda:importo_a_concorrenza_per_vincolo)
DataPropertyDomain(obda:importo_a_concorrenza_per_vincolo obda:Stato_con_vincoli_o_gravami)
AnnotationAssertion(rdfs:comment obda:importo_complessivo_del_credito "Questo attributo indica l'importo totale del credito a garanzia del quale è stato posto sotto ipoteca un veicolo ."^^xsd:string)
DataPropertyDomain(obda:importo_complessivo_del_credito obda:Stato_con_ipoteca_o_privilegio)
AnnotationAssertion(rdfs:comment obda:importo_quota_capitale_ipoteca "L'importo quota capitale  di un' ipoteca in uno stato di veicolo  è l'importo della quota capitale del corrispondente mutuo ipotecario. 
."^^xsd:string)
FunctionalDataProperty(obda:importo_quota_capitale_ipoteca)
DataPropertyDomain(obda:importo_quota_capitale_ipoteca obda:Stato_con_ipoteca_o_privilegio)
AnnotationAssertion(rdfs:comment obda:importo_quota_interessi_ipoteca "L'importo quota interessi  di un' ipoteca su uno stato di veicolo  è l'importo della quota interessi del corrispondente mutuo ipotecario. 
."^^xsd:string)
DataPropertyDomain(obda:importo_quota_interessi_ipoteca obda:Stato_con_ipoteca_o_privilegio)
AnnotationAssertion(rdfs:comment obda:indicatore_km "L'indicatore chilometrico (km) è un elemento di un indirizzo, in genere associato ad una strada, che indica una distanza espressa in Km dall'inizio della strada stessa."^^xsd:string)
FunctionalDataProperty(obda:indicatore_km)
DataPropertyDomain(obda:indicatore_km obda:Denotazione_di_luogo)
DataPropertyDomain(obda:indicatore_km DataSomeValuesFrom(obda:toponimo rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:indirizzo_estero "L'indirizzo estero è una descrizione di un luogo al di fuori dei confini del territorio italiano."^^xsd:string)
SubDataPropertyOf(obda:indirizzo_estero obda:descrizione_denotazione_di_luogo)
FunctionalDataProperty(obda:indirizzo_estero)
DataPropertyDomain(obda:indirizzo_estero obda:Denotazione_di_luogo_estero)
AnnotationAssertion(rdfs:comment obda:kw "Questo attributo riporta la potenza del motore del veicolo  espressa in Kilo Watt."^^xsd:string)
FunctionalDataProperty(obda:kw)
DataPropertyDomain(obda:kw ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore))
AnnotationAssertion(rdfs:comment obda:larghezza "Questo attributo indica la larghezza del veicolo."^^xsd:string)
FunctionalDataProperty(obda:larghezza)
DataPropertyDomain(obda:larghezza ObjectUnionOf(obda:Stato_di_veicolo obda:Veicolo))
AnnotationAssertion(rdfs:comment obda:lunghezza "Questo attributo indica la lunghezza del veicolo."^^xsd:string)
FunctionalDataProperty(obda:lunghezza)
DataPropertyDomain(obda:lunghezza ObjectUnionOf(obda:Stato_di_veicolo obda:Veicolo))
AnnotationAssertion(rdfs:comment obda:massa_in_ordine_di_marcia "La massa in ordine di marcia  di un veicolo in un suo stato  è la massa stimata del veicolo nelle condizioni  operative. Tale massa è calcolata come somma di quattro fattori:
il peso del veicolo  a vuoto (tara );
il peso del conducente  (ovvero una massa standard di 75 kg)
il peso dei liquidi necessari al funzionamento del veicolo (pieno di benzina, l'olio lubrificante del motore, quello dei freni, quello del cambio, il liquido refrigerante);
la ruota di scorta e altri accessori che si assume debbano far parte dell'equipaggiamento del veicolo in corsa ."^^xsd:string)
FunctionalDataProperty(obda:massa_in_ordine_di_marcia)
DataPropertyDomain(obda:massa_in_ordine_di_marcia obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:massa_massima_tecnicamente_ammissibile "La massa massima tecnicamente ammissibile  di un veicolo in un suo stato  è la massa massima ammessa per il veicolo a pieno carico. Essa è determinata dal costruttore tenendo conto della resistenza dei materiali e della corretta disposizione delle masse dei passeggeri  e del carico. Tale massa massima non può essere inferiore, per un autoveicolo  alla massa del veicolo in ordine di marcia  più 75 kg moltiplicato per il numero di posti per passeggeri."^^xsd:string)
FunctionalDataProperty(obda:massa_massima_tecnicamente_ammissibile)
DataPropertyDomain(obda:massa_massima_tecnicamente_ammissibile obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:nome_persona "L'attributo nome_di_persona  lega ogni persona fisica al suo nome."^^xsd:string)
FunctionalDataProperty(obda:nome_persona)
DataPropertyDomain(obda:nome_persona ObjectUnionOf(obda:Persona_fisica obda:Stato_di_persona_fisica))
AnnotationAssertion(rdfs:comment obda:numero_assi "Il numero di assi  è una delle caratteristiche riportate sul libretto di circolazione di un veicolo , in particolare alla voce (L). Tipicamente un autoveicolo , come ad esempio autovettura , ha due assi, quello anteriore e quello posteriore."^^xsd:string)
FunctionalDataProperty(obda:numero_assi)
DataPropertyDomain(obda:numero_assi obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:numero_cilindri "Il numero_cilindri  di un veicolo con motore a combustione interna è pari al numero di cilindri di tale suo motore."^^xsd:string)
FunctionalDataProperty(obda:numero_cilindri)
DataPropertyDomain(obda:numero_cilindri ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_motore_a_combustione))
AnnotationAssertion(rdfs:comment obda:numero_civico "Il numero civico è un elemento di un indirizzo che identifica un accesso nel contesto di una certa strada, piazza, contrada, ecc."^^xsd:string)
FunctionalDataProperty(obda:numero_civico)
DataPropertyDomain(obda:numero_civico obda:Denotazione_di_luogo)
DataPropertyDomain(obda:numero_civico DataSomeValuesFrom(obda:toponimo rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:numero_targa "Il numero_targa  di  una targa  è la sequenza alfa-numerica utilizzata, nella targa stessa, come identificatore."^^xsd:string)
FunctionalDataProperty(obda:numero_targa)
DataPropertyDomain(obda:numero_targa obda:Targa_veicolo)
AnnotationAssertion(rdfs:comment obda:numero_telaio "Il numero di telaio  di un veicolo  è il principale dato di identificazione del veicolo.  Il numero di telaio è composto per convenzioni internazionali da 17 caratteri (cifre e lettere). Esso, identifica, oltre al veicolo:
la casa costruttrice, 
il modello, 
l'anno di produzione,
lo stabilimento di provenienza. 
."^^xsd:string)
FunctionalDataProperty(obda:numero_telaio)
DataPropertyDomain(obda:numero_telaio ObjectUnionOf(obda:Veicolo_con_numero_di_telaio ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_numero_di_telaio)))
AnnotationAssertion(rdfs:comment obda:partita_IVA "L'attributo partita_iva lega ogni persona fisica o giuridica alla sua partita IVA. La partita IVA è una sequenza di cifre che identifica univocamente un soggetto che esercita un'attività rilevante ai fini dell'imposizione fiscale indiretta (IVA)."^^xsd:string)
SubDataPropertyOf(obda:partita_IVA obda:codice_ID_a_fini_fiscali)
FunctionalDataProperty(obda:partita_IVA)
DataPropertyDomain(obda:partita_IVA ObjectUnionOf(ObjectUnionOf(obda:Persona_fisica obda:Stato_di_persona_fisica) ObjectUnionOf(obda:Persona_giuridica obda:Stato_di_persona_giuridica)))
AnnotationAssertion(rdfs:comment obda:peso_complessivo "Il peso complessivo  di un veicolo  in un suo dato stato  è la massa complessiva a pieno carico."^^xsd:string)
FunctionalDataProperty(obda:peso_complessivo)
DataPropertyDomain(obda:peso_complessivo obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:portata "La portata  di un veicolo , in un suo stato , è il peso massimo del carico trasportabile dal veicolo."^^xsd:string)
FunctionalDataProperty(obda:portata)
DataPropertyDomain(obda:portata obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:posti_a_sedere "Il numero di posti a sedere  di un veicolo  in un suo stato  è pari al numero massimo di persone che possono collocarsi correttamente sedute nel veicolo, oltre al conducente ."^^xsd:string)
FunctionalDataProperty(obda:posti_a_sedere)
DataPropertyDomain(obda:posti_a_sedere obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:posti_in_piedi "Il numero di posti in piedi  di un veicolo  in un suo stato  è pari al numero massimo di persone che possono collocarsi correttamente in piedi nel veicolo, oltre ai posti a sedere  e al conducente."^^xsd:string)
FunctionalDataProperty(obda:posti_in_piedi)
DataPropertyDomain(obda:posti_in_piedi obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:ragione_sociale "L'attributo ragione_sociale  lega ogni persona giuridica  alla sua ragione sociale. 
."^^xsd:string)
FunctionalDataProperty(obda:ragione_sociale)
DataPropertyDomain(obda:ragione_sociale ObjectUnionOf(obda:Persona_giuridica obda:Stato_di_persona_giuridica))
AnnotationAssertion(rdfs:comment obda:regime_di_coppia_massima "Il regime di coppia massima  di un veicolo a motore  in un suo stato  è il regime di coppia massima del suo motore, ovvero il numero di giri in corrispondenza del quale la coppia motrice di quel motore è massima ."^^xsd:string)
FunctionalDataProperty(obda:regime_di_coppia_massima)
DataPropertyDomain(obda:regime_di_coppia_massima ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore))
AnnotationAssertion(rdfs:comment obda:regime_di_potenza_massima "Il regime di potenza massima  di un veicolo a motore  in un suo stato  è il regime di potenza massima del suo motore, ovvero il numero di giri in corrispondenza del quale la potenza di quel motore è massima.
."^^xsd:string)
FunctionalDataProperty(obda:regime_di_potenza_massima)
DataPropertyDomain(obda:regime_di_potenza_massima ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore))
AnnotationAssertion(rdfs:comment obda:revisione_entro_data "La revisione entro data   di un veicolo in un suo stato  è la data entro la quale il veicolo deve essere sottoposto a revisione."^^xsd:string)
FunctionalDataProperty(obda:revisione_entro_data)
DataPropertyDomain(obda:revisione_entro_data obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:serie_targa "La serie  di una targa  indica il ciclo di numerazione a cui il numero di targa fa riferimento in modo tale che due targhe diverse abbiano necessariamente numeri diversi solo se appartengono a serie diverse"^^xsd:string)
FunctionalDataProperty(obda:serie_targa)
DataPropertyDomain(obda:serie_targa obda:Targa_veicolo)
AnnotationAssertion(rdfs:comment obda:sesso "Questo attributo indica se una persona fisica  è maschio o femmina."^^xsd:string)
FunctionalDataProperty(obda:sesso)
DataPropertyDomain(obda:sesso ObjectUnionOf(obda:Persona_fisica obda:Stato_di_persona_fisica))
AnnotationAssertion(rdfs:comment obda:sospensioni_pneumatiche "Questo attributo indica se un veicolo è equipaggiato con sospensioni pneumatiche o meno. Le sospensioni pneumatiche rappresentano una particolare tipologia di sospensione, che dà luogo ad uno specifico trattamento fiscale."^^xsd:string)
FunctionalDataProperty(obda:sospensioni_pneumatiche)
DataPropertyDomain(obda:sospensioni_pneumatiche obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:tara "La tara  di un veicolo  in un suo stato  è la sua massa a vuoto."^^xsd:string)
FunctionalDataProperty(obda:tara)
DataPropertyDomain(obda:tara obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:tipo_cessazione_circolazione "Descrive la causale relativa alla cessazione della circolazione. I suoi valori corrispondono alle possibili finalità per cui avviene una cessazione della circolazione."^^xsd:string)
FunctionalDataProperty(obda:tipo_cessazione_circolazione)
DataPropertyDomain(obda:tipo_cessazione_circolazione obda:Stato_di_cessazione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:tipo_credito "Questo attributo indica se lo stato  del veicolo  è con ipoteca  o con privilegio ."^^xsd:string)
FunctionalDataProperty(obda:tipo_credito)
DataPropertyDomain(obda:tipo_credito obda:Stato_con_ipoteca_o_privilegio)
AnnotationAssertion(rdfs:comment obda:tipo_di_luogo "L'attributo tipo_di_luogo lega un luogo al suo tipo, dove il tipo è uno dei possibili nomi delle sottoclassi di luogo dichiarate nell'ontologia (ad esempio, Strada, Accesso, Centro_urbano, ecc.)."^^xsd:string)
FunctionalDataProperty(obda:tipo_di_luogo)
DataPropertyDomain(obda:tipo_di_luogo obda:Luogo)
AnnotationAssertion(rdfs:comment obda:tipo_di_veicolo "L'attributo tipo_di_veicolo lega un veicolo al suo tipo, dove il tipo è uno dei possibili nomi delle sottoclassi di veicolo dichiarate nell'ontologia."^^xsd:string)
FunctionalDataProperty(obda:tipo_di_veicolo)
DataPropertyDomain(obda:tipo_di_veicolo obda:Veicolo)
AnnotationAssertion(rdfs:comment obda:tipo_di_veicolo_classificazione_ACI "Il tipo di veicolo classificazione ACI  è un attributo che indica la classe, o tipo, del veicolo secondo la classificazione di ACI."^^xsd:string)
FunctionalDataProperty(obda:tipo_di_veicolo_classificazione_ACI)
DataPropertyDomain(obda:tipo_di_veicolo_classificazione_ACI obda:Veicolo)
AnnotationAssertion(rdfs:comment obda:tipo_motore "Questo attributo indica se il veicolo  ha un motore elettrico  oppure un motore a combustione ."^^xsd:string)
FunctionalDataProperty(obda:tipo_motore)
DataPropertyDomain(obda:tipo_motore obda:Veicolo_a_motore)
AnnotationAssertion(rdfs:comment obda:tipo_omologato "Questo attributo è una descrizione tecnica dell'omologazione di un veicolo."^^xsd:string)
FunctionalDataProperty(obda:tipo_omologato)
DataPropertyDomain(obda:tipo_omologato ObjectUnionOf(obda:Veicolo_con_numero_di_telaio ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_con_numero_di_telaio)))
AnnotationAssertion(rdfs:comment obda:tipo_perdita_di_possesso "Descrive la causale relativa alla perdita del possesso. I suoi valori corrispondono alle possibili tipologie di perdita di possesso descritte nella gerarchia associata a finalità perdita possesso."^^xsd:string)
FunctionalDataProperty(obda:tipo_perdita_di_possesso)
DataPropertyDomain(obda:tipo_perdita_di_possesso obda:Stato_con_perdita_di_possesso)
AnnotationAssertion(rdfs:comment obda:tipo_persona "Questo attributo indica se una persona  è fisica  o giuridica ."^^xsd:string)
FunctionalDataProperty(obda:tipo_persona)
DataPropertyDomain(obda:tipo_persona obda:Persona)
AnnotationAssertion(rdfs:comment obda:tipo_persona_giuridica "Questo attributo indica se una persona giuridica  è un ente privato  o un ente pubblico ."^^xsd:string)
FunctionalDataProperty(obda:tipo_persona_giuridica)
DataPropertyDomain(obda:tipo_persona_giuridica ObjectUnionOf(obda:Persona_giuridica obda:Stato_di_persona_giuridica))
AnnotationAssertion(rdfs:comment obda:tipo_vincolo_classificazione_ACI "Questo attributo riporta la definizione di vincolo_o_gravame usata all'interno dei sistemi di ACI."^^xsd:string)
FunctionalDataProperty(obda:tipo_vincolo_classificazione_ACI)
DataPropertyDomain(obda:tipo_vincolo_classificazione_ACI obda:Vincolo_o_gravame)
AnnotationAssertion(rdfs:comment obda:tipo_vincolo_o_gravame "Indica il nome del vincolo_o_gravame  a cui è associato. Fra i possibili valori segnaliamo:
\"Ipoteca o privilegio\"
\"Fermo amministrativo\"
\"Sequestro\"
\"Massa Fallimentare\"
\"Pignoramento\"
\"Concordato preventivo\"
\"Congelamento dei beni\""^^xsd:string)
FunctionalDataProperty(obda:tipo_vincolo_o_gravame)
DataPropertyDomain(obda:tipo_vincolo_o_gravame obda:Vincolo_o_gravame)
AnnotationAssertion(rdfs:comment obda:tipologia_destinazione_di_uso "Per destinazione del veicolo s'intende la sua utilizzazione in base alle caratteristiche tecniche. 
Per uso del veicolo s'intende la sua utilizzazione economica, i veicoli possono essere adibiti a uso proprio o a uso di terzi. 
Si ha l'uso di terzi quando un veicolo è utilizzato, dietro corrispettivo, nell'interesse di persone diverse dall'intestatario della carta di circolazione. Negli altri casi il veicolo si intende adibito a uso proprio. 
L'uso di terzi comprende: 
a) locazione senza conducente; 
b) servizio di noleggio con conducente e servizio di piazza (taxi) per trasporto di persone; 
c) servizio di linea per trasporto di persone; 
d) servizio di trasporto di cose per conto terzi; 
e) servizio di linea per trasporto di cose; 
f) servizio di piazza per trasporto di cose per conto terzi."^^xsd:string)
FunctionalDataProperty(obda:tipologia_destinazione_di_uso)
DataPropertyDomain(obda:tipologia_destinazione_di_uso obda:In_uso)
AnnotationAssertion(rdfs:comment obda:toponimo "Il toponimo è il nome proprio di un luogo geografico."^^xsd:string)
FunctionalDataProperty(obda:toponimo)
DataPropertyDomain(obda:toponimo obda:Denotazione_di_luogo)
AnnotationAssertion(rdfs:comment obdaod:anno_statistica "Per DataSet che contengono dati relativi ad un determinato anno solare, indica l'anno al quale si riferiscono i dati."^^xsd:string)
FunctionalDataProperty(obdaod:anno_statistica)
DataPropertyDomain(obdaod:anno_statistica obdaod:DataSet)
AnnotationAssertion(rdfs:comment obdaod:data_fine_validita_data_set "Indica la data di fine di validità dei dati contenuti nel dataset (se applicabile)."^^xsd:string)
FunctionalDataProperty(obdaod:data_fine_validita_data_set)
DataPropertyDomain(obdaod:data_fine_validita_data_set obdaod:DataSet)
AnnotationAssertion(rdfs:comment obdaod:data_inizio_validita_data_set "Indica la data di inizio di validità dei dati contenuti nel dataset (se applicabile)."^^xsd:string)
FunctionalDataProperty(obdaod:data_inizio_validita_data_set)
DataPropertyDomain(obdaod:data_inizio_validita_data_set obdaod:DataSet)
AnnotationAssertion(rdfs:comment obdaod:ha_misura "Questo attributo indica una misura associata ad una osservazione statistica (ad esempio, può indicare la somma di prime iscrizioni di veicoli, o la percentuale di veicoli radiati)."^^xsd:string)
DataPropertyDomain(obdaod:ha_misura obdaod:Osservazione_statistica)
AnnotationAssertion(rdfs:comment obdaod:ha_misura_conteggio "E' una misura che indica il numero di eventi aggregati nell'osservazione (ad esempio questo attributo può essere usato per associare il numero totale di prime iscrizioni ad una osservazione di tipo Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale)."^^xsd:string)
SubDataPropertyOf(obdaod:ha_misura_conteggio obdaod:ha_misura)
FunctionalDataProperty(obdaod:ha_misura_conteggio)
AnnotationAssertion(rdfs:comment geo:lat "Questo attributo è importato dal vocabolario RDF \"WGS84 Geo Positioning\", considerato il vocabolario di riferimento per geo-localizzazione delle risorse. geo:lat indica in particolare la latitudine della posizione dell'oggetto a cui è associato (in questa ontologia un Ente territoriale, o un luogo. Nel primo caso viene restituita convenzionalmente la latitudine dell'area amministrata dall'ente), La risorsa è descritta nel vocaboloario di riferimento (http://www.w3.org/2003/01/geo/wgs84_pos)."^^xsd:string)
FunctionalDataProperty(geo:lat)
DataPropertyDomain(geo:lat ObjectUnionOf(obda:Ente_territoriale obda:Luogo))
AnnotationAssertion(rdfs:comment geo:long "Questo attributo è importato dal vocabolario RDF \"WGS84 Geo Positioning\", considerato il vocabolario di riferimento per geo-localizzazione delle risorse. geo:long indica in particolare la longitudine della posizione dell'oggetto a cui è associato (in questa ontologia un Ente territoriale, o un luogo. Nel primo caso viene restituita convenzionalmente la latitudine dell'area amministrata dall'ente), La risorsa è descritta nel vocaboloario di riferimento (http://www.w3.org/2003/01/geo/wgs84_pos)."^^xsd:string)
FunctionalDataProperty(geo:long)
DataPropertyDomain(geo:long ObjectUnionOf(obda:Ente_territoriale obda:Luogo))
AnnotationAssertion(rdfs:comment dcterms:LicenseDocument "E' un concetto importato dal Dublin Core, vocabolario di termini per la descrizione dei metadati. Una sua istanza denota  un documento legale che stabilisce le modalità di utilizzo della risorsa a cui è legato tramite il ruolo dct:license. Il concetto è descritto nel vocabolario di appartenenza (http://purl.org/dc/terms/)"^^xsd:string)
AnnotationAssertion(rdfs:comment qb:DataSet "E' un concetto importato dall'RDF data cube vocabulary, una recommendation del W3C per la descrizione di dati multidimensionali. Le sue istanze sono dataset di tipo statistico. La risorsa è descritta nel vocabolario di appartenenza (http://purl.org/linked-data/cube)."^^xsd:string)
AnnotationAssertion(rdfs:comment qb:Observation "E' un concetto importato dall'RDF data cube vocabulary, una recommendation del W3C per la descrizione di dati multidimensionali. Le sue istanze sono osservazioni di tipo statistico. La risorsa è descritta nel vocabolario di appartenenza al link https://www.w3.org/TR/vocab-data-cube/#dfn-qb-observation-1."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Accesso "Un accesso  è un luogo  la cui funzione è consentire l'ingresso e l'uscita a persone fisiche  o veicoli  ad una infrastruttura di interesse pubblico o privato. La denotazione  di un accesso è il suo indirizzo."^^xsd:string)
DisjointClasses(obda:Accesso obda:Circoscrizione)
AnnotationAssertion(rdfs:comment obda:Alimentazione "Una istanza di questo concetto denota una alimentazione, cioè la fonte di energia, di un veicolo a motore. Il nome del concetto deriva da \"impianto di alimentazione\", organo dei veicoli a motore. Questo concetto in particolare denota le alimentazioni così così come usualmente classificate nei sistemi informativi di ACI."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Autobus "Un autobus  è un veicolo  strutturalmente destinato al trasporto esclusivo di passeggeri , anche con bagagli personali (più di 9 passeggeri, secondo il Codice della strada). Il termine è composto da due parti: \"bus\", dal latino omnibus = \"per tutti\", ed \"auto\", a sua volta contrazione di \"autoveicolo\"."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Autocarro "Un autocarro  (o camion) è un veicolo destinato al trasporto di cose e delle persone addette all'uso o al trasporto delle cose stesse."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Autoveicolo "Un veicolo a motore  è un autoveicolo  quando:
reca a bordo la sorgente di energia che alimenta il motore;
è adatto a circolare su strade ordinarie (trasporto su gomma);
è munito di congegni per modificare la sua direzione;
è munito di freni;
è munito di almeno quattro ruote.
L'ultima caratteristica lo distingue dai motoveicoli . A questa definizione fanno eccezione i quadricicli (a motore pesante  o leggero ) i quali, seppur muniti di quattro ruote, sono considerati motoveicoli."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Autovettura "Un'autovettura è un veicolo a motore destinato al trasporto di persone, aventi al massimo nove posti, compreso quello del conducente."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Centro_urbano "Un centro urbano  è un luogo  caratterizzato dal tessuto urbano consolidato, con esclusione delle zone produttive periferiche e delle zone prive di opere di urbanizzazione o di edificazione. Ogni centro urbano è contenuto nella circoscrizione  di un comune ."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Ciclomotore "Un ciclomotore è un motoveicolo a due o tre ruote aventi le seguenti caratteristiche, che devono risultare per costruzione:
nel caso dei veicoli a due ruote, il motore:
ha cilindrata inferiore o uguale a 50 cm3 se a combustione interna, oppure
la potenza nominale continua massima è inferiore o uguale a 4kW se elettrico
nel caso dei veicoli a tre ruote, il motore:
ha cilindrata inferiore o uguale a 50 cm3 se ad accensione comandata, oppure
la potenza massima netta è inferiore a uguale a 4 kW per gli altri motori a combustione interna, oppure
la potenza nominale continua massima è inferiore o uguale a 4 kW per i motori elettrici."^^xsd:string)
SubClassOf(obda:Ciclomotore obda:Veicolo_non_registrabile_al_PRA)
AnnotationAssertion(rdfs:comment obda:Circoscrizione "Una circoscrizione  è un luogo  il cui scopo è delimitare l'ambito di intervento di una nazione , ente territoriale  o ufficio periferico ."^^xsd:string)
EquivalentClasses(obda:Circoscrizione ObjectUnionOf(obda:Circoscrizione_comunale obda:Circoscrizione_di_ufficio obda:Circoscrizione_metropolitana obda:Circoscrizione_nazionale obda:Circoscrizione_provinciale obda:Circoscrizione_regionale))
EquivalentClasses(obda:Circoscrizione ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) owl:Thing))
AnnotationAssertion(rdfs:comment obda:Circoscrizione_comunale "Una circoscrizione  è Circoscrizione_comunale  se è quella di  un comune ."^^xsd:string)
SubClassOf(obda:Circoscrizione_comunale ObjectAllValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) obda:Comune))
AnnotationAssertion(rdfs:comment obda:Circoscrizione_di_ufficio "Una circoscrizione è Circoscrizione_di_ufficio se è quella di un ufficio periferico. Si noti che le circoscrizioni di zona (come quelle dei municipi di Roma, ad esempio) sono tra queste."^^xsd:string)
SubClassOf(obda:Circoscrizione_di_ufficio ObjectAllValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) obda:Ufficio_periferico))
AnnotationAssertion(rdfs:comment obda:Circoscrizione_metropolitana "Una circoscrizione  è Circoscrizione_metropolitana  se è quella di  una città metropolitana ."^^xsd:string)
SubClassOf(obda:Circoscrizione_metropolitana ObjectAllValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) obda:Citta_metropolitana))
AnnotationAssertion(rdfs:comment obda:Circoscrizione_nazionale "Una circoscrizione  è Circoscrizione_nazionale  se è quella di  una nazione ."^^xsd:string)
SubClassOf(obda:Circoscrizione_nazionale ObjectAllValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) obda:Nazione))
AnnotationAssertion(rdfs:comment obda:Circoscrizione_provinciale "Una circoscrizione  è Circoscrizione_provinciale  se è quella di  una provincia ."^^xsd:string)
SubClassOf(obda:Circoscrizione_provinciale ObjectAllValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) obda:Provincia))
AnnotationAssertion(rdfs:comment obda:Circoscrizione_regionale "Una circoscrizione  è Circoscrizione_regionale  se è quella di  una regione ."^^xsd:string)
SubClassOf(obda:Circoscrizione_regionale ObjectAllValuesFrom(ObjectInverseOf(obda:ha_circoscrizione) obda:Regione))
AnnotationAssertion(rdfs:comment obda:Citta_metropolitana "Le citta metropolitane sono quattordici \"enti territoriali di area vasta\" che hanno sostituito le province omonime. 
Sono dieci città metropolitane delle regioni a statuto ordinario, i cui territori coincidono con quelli delle preesistenti province: Roma Capitale, Torino, Milano, Venezia, Genova, Bologna, Firenze, Bari, Napoli e Reggio Calabria. A queste si aggiungono le quattro città metropolitane delle regioni a statuto speciale: Cagliari, Catania, Messina, Palermo. 
Le città metropolitane, come le Province italiane, sono enti di secondo livello governati da organi eletti tra i sindaci ed i consiglieri dei comuni ricompresi nella città metropolitana stessa."^^xsd:string)
SubClassOf(obda:Citta_metropolitana ObjectAllValuesFrom(obda:ha_circoscrizione obda:Circoscrizione_metropolitana))
DisjointClasses(obda:Citta_metropolitana obda:Provincia)
AnnotationAssertion(rdfs:comment obda:Classe_Euro "La Classe_euro  (anche chiamata categoria Euro) denota la classificazione della classe ambientale del veicolo sulla base delle emissioni inquinanti che questo produce.
Le istanze rappresentano le varie classi (una istanza per classe Euro introdotta)."^^xsd:string)
EquivalentClasses(obda:Classe_Euro ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_classificazione_Euro) owl:Thing))
AnnotationAssertion(rdfs:comment obda:Comune "Un comune, nell'ordinamento giuridico della Repubblica Italiana, è un ente locale territoriale autonomo ."^^xsd:string)
SubClassOf(obda:Comune ObjectAllValuesFrom(obda:ha_circoscrizione obda:Circoscrizione_comunale))
DisjointClasses(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune))
AnnotationAssertion(rdfs:comment obda:Denotazione_di_luogo "Una denotazione di luogo  è un significante linguistico che si riferisce  ad un luogo in un suo stato . Essa può essere considerata 
semplice descrizione: un segno o un oggetto linguistico che non ha senso o non interessa scomporre ulteriormente, oppure 
complessa: una formula contenente sub-formule; 
l'ontologia prevede le seguenti sub-formule: il CAP , il toponimo , e il selettore (il numero civico oppure l'indicatore chilometrico).
Nel secondo caso può specializzare altre denotazioni di luogo, nel caso queste ultime si riferiscano a luoghi dei quali il luogo denotato è parte . Questi luoghi sono identificati in parti proprie della denotazione complessa."^^xsd:string)
EquivalentClasses(obda:Denotazione_di_luogo ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_denotazione) owl:Thing))
SubClassOf(obda:Denotazione_di_luogo obda:Entita_non_avente_stati)
AnnotationAssertion(rdfs:comment obda:Denotazione_di_luogo_estero "Una denotazione di luogo estero è una denotazione di un luogo che si trova al di fuori dei confini del territorio italiano. Le sub-formule di una denotazione di luogo estero sono il codice ZIP e l'indirizzo estero."^^xsd:string)
SubClassOf(obda:Denotazione_di_luogo_estero obda:Denotazione_di_luogo)
DisjointClasses(obda:Denotazione_di_luogo_estero DataSomeValuesFrom(obda:CAP rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto "Una istanza di questo concetto è una denotazione di luogo specifica per gli stati di soggetto rappresentati in una applicazione di bollo auto."^^xsd:string)
DisjointClasses(obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto obda:Denotazione_indirizzo_per_soggetto_in_veicolo)
AnnotationAssertion(rdfs:comment obda:Denotazione_indirizzo_per_soggetto_in_veicolo "Una istanza di questo concetto è una denotazione di luogo specifica per gli stati di soggetto registrati per veicolo."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Ente_privato "Un ente privato  è una persona giuridica  creata secondo norme di diritto privato, destinata a perseguire interessi di carattere privato, ma che può anche svolgere, come gli enti pubblici , funzioni amministrative."^^xsd:string)
DisjointClasses(obda:Ente_privato obda:Ente_pubblico)
AnnotationAssertion(rdfs:comment obda:Ente_pubblico "Un ente pubblico  è una persona giuridica  creata secondo norme di diritto pubblico, attraverso cui la pubblica amministrazione svolge la sua funzione amministrativa. 
Gli enti pubblici si contrappongono, quindi, agli enti privati , persone giuridiche create secondo norme di diritto privato, che sono per lo più destinate a perseguire interessi di carattere privato, ma possono però anche svolgere funzioni amministrative."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Ente_territoriale "Un Ente territoriale  è un ente pubblico locale , che ha tra i suoi elementi costitutivi il territorio, il quale è quindi essenziale per l'esistenza dell'ente. 
Gli enti pubblici che non appartengono a questa categoria sono detti enti istituzionali.  E' ente territoriale la nazione ma lo sono anche quegli enti locali per i quali il territorio della circoscrizione non è solo limite della competenza degli organi, ma anche elemento costitutivo dell'ente stesso, i cui organi di governo sono rappresentativi della popolazione residente. Con riferimento a questi enti locali si suole parlare di governo locale.  
Secondo l'art. 114 della Costituzione, la Repubblica Italiana è costituita da un ente territoriale nazionale, lo Stato, e dai seguenti enti territoriali:  
i comuni   
le province   
le città metropolitane 
 le regioni   
Secondo il citato art. 114 \" essi sono enti autonomi con propri statuti, poteri e funzioni secondo i principi fissati dalla Costituzione\".  Il territorio nazione è diviso in regioni"^^xsd:string)
EquivalentClasses(obda:Ente_territoriale ObjectSomeValuesFrom(obda:ha_circoscrizione owl:Thing))
SubClassOf(obda:Ente_territoriale obda:Ente_pubblico)
DisjointClasses(obda:Ente_territoriale obda:Luogo)
AnnotationAssertion(rdfs:comment obda:Entita_avente_stati "Questo concetto rappresenta tutti gli oggetti che hanno sia proprietà che non cambiano nel tempo, o per le quali non interessa tenere traccia del cambiamento, e che quindi sono sempre costanti per tutta la durata di esistenza dell'oggetto stesso, sia proprietà che invece modificano il loro valore, e per le quali si vuole mantenere memoria storica del cambiamento, con il dettaglio dell'istante in cui il cambiamento è avvenuto. Ad esempio, i veicoli hanno stati. 
In particolare, in questa ontologia si è assunto che il numero di telaio sia una proprietà non mutevole di un veicolo, e quindi un veicolo ha sempre un numero di telaio associato che non cambia mai. Al contrario, la targa del veicolo può cambiare durante la vita del veicolo stesso, ed è quindi associata allo stato del veicolo."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Entita_non_avente_stati "Questo concetto rappresenta tutti gli oggetti che hanno solo proprietà che non cambiano nel tempo, o per le quali non interessa tenere traccia del cambiamento. Questi oggetti hanno quindi proprietà che sono sempre costanti per tutta la durata di esistenza dell'oggetto stesso."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Femmina "Una femmina  è una persona fisica  di sesso femminile."^^xsd:string)
DisjointClasses(obda:Femmina obda:Maschio)
AnnotationAssertion(rdfs:comment obda:Filobus "Un filobus  è un filoveicolo  strutturalmente destinato al trasporto esclusivo di passeggeri , anche con bagagli personali (più di 9 passeggeri, secondo il Codice della strada)."^^xsd:string)
SubClassOf(obda:Filobus obda:Filoveicolo)
AnnotationAssertion(rdfs:comment obda:Filoveicolo "Un filoveicolo  è un veicolo a motore  con le seguenti caratteristiche:
il motore è elettrico, ed è collegato, per la sua alimentazione. ad una linea aerea di contatto;
non è vincolato da rotaie;
è marciante su ruote gommate e non in sede propria;
è munito di motore ausiliario a scoppio o diesel (non obbligatoriamente).  
A loro volta si suddividono, come per gli autoveicoli, in filobus, filosnodati, filotreni, ecc... Prevalentemente circolano in aree urbane o suburbane e su percorsi prestabiliti."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Finalita_cessazione_circolazione_per_demolizione "La finalità di cessazione di circolazione per demolizione  è una finalità di cessazione di circolazione  che si consegue quando la cessazione della circolazione di un veicolo  per demolizione viene registrata nel PRA."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Finalita_prima_iscrizione_di_veicolo_nuovo "La finalità di prima iscrizione di veicolo nuovo è una finalità che si consegue quando un veicolo nuovo viene iscritto al PRA. Con l'iscrizione al PRA il veicolo acquisice lo stato di bene mobile registrato (che perde solamente con la radiazione)."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:In_disuso "Un veicolo in disuso  è uno stato  che un veicolo  possiede quando non può più svolgere la funzione per la quale è stato costruito e non può più ripristinare uno stato in uso ."^^xsd:string)
DisjointClasses(obda:In_disuso obda:In_uso)
AnnotationAssertion(rdfs:comment obda:In_uso "Un veicolo in uso  è uno stato  che un veicolo  possiede quando può svolgere la funzione per la quale è stato costruito."^^xsd:string)
EquivalentClasses(obda:In_uso ObjectUnionOf(obda:Uso_per_terzi obda:Uso_proprio))
EquivalentClasses(obda:In_uso ObjectUnionOf(obda:Uso_per_trasporto_cose obda:Uso_per_trasporto_persone))
EquivalentClasses(obda:In_uso ObjectUnionOf(obda:Uso_privato obda:Uso_pubblico))
EquivalentClasses(obda:In_uso DataSomeValuesFrom(obda:tipologia_destinazione_di_uso rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:Luogo "Un luogo  è la caratterizzazione di ruolo rivestito da un'area territoriale, cioè da una porzione di spazio. Ad esempio, quando ci riferiamo ad una città non alludiamo strettamente all'area territoriale coperta da quella città, ma facciamo riferimento alla città come luogo, e quindi al ruolo assegnato a quell'area territoriale per il fatto che una comunità ci viva nella forma di una città."^^xsd:string)
EquivalentClasses(obda:Luogo ObjectSomeValuesFrom(obda:ha_stato_di_luogo owl:Thing))
EquivalentClasses(obda:Luogo DataSomeValuesFrom(obda:tipo_di_luogo rdfs:Literal))
SubClassOf(obda:Luogo obda:Entita_avente_stati)
AnnotationAssertion(rdfs:comment obda:Macchina_agricola_semovente "Una macchina agricola semovente  è un veicolo a motore  non registrabile al PRA , impiegato in agricoltura, la quale può autonomamente modificare la sua posizione nello spazio. Essa può essere:
una macchine motrice: impiegate per trainare, spingere o azionare altre macchine: appartiene a questa categoria il trattore agricolo ;
una macchina operatrice semovente, autonoma nell'esecuzione di operazioni agricole (un esempio è la mietitrebbiatrice)."^^xsd:string)
SubClassOf(obda:Macchina_agricola_semovente obda:Veicolo_non_registrabile_al_PRA)
AnnotationAssertion(rdfs:comment obda:Maschio "Un maschio  è una persona fisica  di sesso maschile."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Motocarro "Un motocarro è un veicolo a tre ruole destinato al trasporto di cose."^^xsd:string)
SubClassOf(obda:Motocarro obda:Triciclo)
AnnotationAssertion(rdfs:comment obda:Motocarrozzetta "Una motocarrozzetta  o sidecar è un motociclo  a tre ruote ottenuto dall'accoppiamento di un motociclo a due ruote con una struttura laterale portante dotata di ruota, generalmente rappresentata da un carrozzino (in inglese sidecar). Sebbene nella lingua inglese non indichi la combinazione di motociclo più carrozzino (che è detta combination, outfit, rig oppure hack), ma unicamente il carrozzino a una sola ruota da agganciare alla moto, in Italia e altri Paesi il termine sidecar viene diffusamente utilizzato per indicare il veicolo completo."^^xsd:string)
SubClassOf(obda:Motocarrozzetta obda:Motociclo)
AnnotationAssertion(rdfs:comment obda:Motociclo "Un motociclo  (o motocicletta) è un motoveicolo  a due ruote che, condotto da un guidatore , permette di muoversi autonomamente sulla superficie terrestre per il trasporto di uno o due passeggeri . 
Si noti che un motociclo, per distinguersi dai ciclomotore  deve poter sviluppare su strada orizzontale una velocità di oltre 45 km/h o avere cilindrata  maggiore di 50cc."^^xsd:string)
EquivalentClasses(obda:Motociclo ObjectUnionOf(obda:Motociclo_a_solo obda:Motociclo_con_passeggero))
AnnotationAssertion(rdfs:comment obda:Motociclo_a_solo "Un motociclo  è a solo  quando consente il trasporto del solo conducente ."^^xsd:string)
DisjointClasses(obda:Motociclo_a_solo obda:Motociclo_con_passeggero)
AnnotationAssertion(rdfs:comment obda:Motociclo_con_passeggero "Un motociclo  è con passeggero  quando consente il trasporto del conducente  più un altro passeggero ."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Motoveicolo "I motoveicoli sono veicoli a motore, a due, tre o quattro ruote, e si distinguono in:
a) motocicli
b) motocarrozzette 
c) motoveicoli per trasporto promiscuo 
d) motocarri 
e) mototrattori
f) motoveicoli per trasporti specifici 
g) motoveicoli per uso speciale 
h) quadricicli a motore"^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Nazione "Una nazione  è un ente territoriale  con sovranità nazionale, ovvero con poteri di governo (legislativo, esecutivo e giudiziario), riconosciuta ad un soggetto di diritto pubblico internazionale."^^xsd:string)
SubClassOf(obda:Nazione ObjectAllValuesFrom(obda:ha_circoscrizione obda:Circoscrizione_nazionale))
AnnotationAssertion(rdfs:comment obda:Persona "In ambito filosofico, si definisce persona  un essere dotato di coscienza di sé e in possesso di una propria identità. Dal punto di vista giuridico, una persona  viene rappresentata esattamente attraverso due concetti specifici, la persona fisica  e la persona giuridica ."^^xsd:string)
EquivalentClasses(obda:Persona ObjectUnionOf(obda:Persona_fisica obda:Persona_giuridica))
EquivalentClasses(obda:Persona DataSomeValuesFrom(obda:tipo_persona rdfs:Literal))
SubClassOf(obda:Persona obda:Soggetto)
AnnotationAssertion(rdfs:comment obda:Persona_fisica "Una persona fisica , in diritto, è l'essere umano in quanto soggetto di diritto e, quindi, dotato di capacità giuridica. Nell'ordinamento italiano, secondo l'articolo 1 del codice civile, sono persone fisiche  gli esseri umani che, con la loro nascita, divengono titolari di diritti e doveri, cioè acquisiscono la capacità giuridica. Con il raggiungimento della maggiore età (18 anni per l'ordinamento italiano), la persona fisica  acquisisce la capacità di agire, cioè la possibilità di porre in essere atti rilevanti ai fini giuridici. Nell'ambito dell'ontologia, una persona fisica  può essere proprietaria  e\">o  possedere la funzionalità  di diversi stati di veicoli ."^^xsd:string)
EquivalentClasses(obda:Persona_fisica ObjectUnionOf(obda:Femmina obda:Maschio))
DisjointClasses(obda:Persona_fisica obda:Persona_giuridica)
AnnotationAssertion(rdfs:comment obda:Persona_giuridica "La nozione di persona giuridica  indica un complesso organizzato di persone e di beni al quale l'ordinamento giuridico attribuisce la capacità giuridica facendone così un soggetto di diritto. In generale la capacità giuridica riconosciuta alla persona giuridica  è meno estesa di quella riconosciuta all'essere umano in quanto soggetto di diritto, ossia alla persona fisica , poiché la persona giuridica  non può essere parte di quei rapporti giuridici che, per loro natura, possono intercorrere solo tra persone fisiche (l'esempio tipico è rappresentato dai rapporti familiari). Elemento fondamentale e caratterizzante della persona giuridica è la sua autonomia patrimoniale. Il patrimonio della persona giuridica  è autonomo ed indipendente dai patrimoni privati di tutti coloro che ne fanno parte: da ciò discende che i creditori della persona giuridica  non possono rivalersi sui patrimoni personali dei soci o degli associati. Due tipologie di persone giuridiche  rilevanti nell'ambito dell'ontologia sono gli enti pubblici  e gli enti privati ."^^xsd:string)
EquivalentClasses(obda:Persona_giuridica ObjectUnionOf(obda:Ente_privato obda:Ente_pubblico))
AnnotationAssertion(rdfs:comment obda:Provincia "Le province , assieme ai comuni , alle regioni , alle città metropolitane  e allo Stato centrale, sono uno dei cinque elementi costitutivi della Repubblica Italiana. Ogni provincia è, in particolare, un ente territoriale  il cui territorio è per estensione una parte di quello della regione  (di competenza ) e comprende il territorio di più comuni . La disciplina delle province è contenuta nel titolo V della parte II della Costituzione (artt. 114 ss.) e, ovviamente, in fonti primarie e secondarie che attuano il disposto costituzionale. Tranne le province autonome di Trento e Bolzano, tutte le province fanno parte dell'Unione delle Province d'Italia (Upi).  Attualmente le province italiane sono 110, includendo nel computo anche le province regionali della Sicilia (che hanno natura consortile), le province autonome di Trento e di Bolzano (che svolgono funzioni regionali e sono in grado di legiferare), le 10 città metropolitana  e la Regione Valle d'Aosta, che svolge anche funzioni che nelle regioni a statuto ordinario sono svolte dalle province."^^xsd:string)
SubClassOf(obda:Provincia ObjectAllValuesFrom(obda:ha_circoscrizione obda:Circoscrizione_provinciale))
AnnotationAssertion(rdfs:comment obda:Quadriciclo "L'art. 53 del Codice della Strada definisce i quadricicli come ''veicoli a quattro ruote destinati al trasporto di cose con al massimo una persona oltre al conducente nella cabina di guida, ai trasporti specifici e per uso speciale, la cui massa a vuoto non superi le 0,55 t, con esclusione della massa delle batterie se a trazione elettrica, capaci di sviluppare su strada orizzontale una velocità massima fino a 80 km\"."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Rappresentazione "Una rappresentazione è una descrizione di un fatto del mondo effettua da un soggetto."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Rappresentazione_nel_PRA "Uno stato rappresentato dal PRA  è uno stato rappresentato  tale che la rappresentazione è gestita dal PRA."^^xsd:string)
SubClassOf(obda:Rappresentazione_nel_PRA obda:Rappresentazione)
SubClassOf(obda:Rappresentazione_nel_PRA ObjectAllValuesFrom(obda:rappresentazione_fatta_da ObjectOneOf(obda:ACI)))
AnnotationAssertion(rdfs:comment obda:Rappresentazione_nel_ruolo_tributario "Denota le rappresentazioni (di veicoli e loro stati) fatte nell'ambito del ruolo tributario, cioè nei sistemi relativi alla gestione delle tasse automobilistiche."^^xsd:string)
SubClassOf(obda:Rappresentazione_nel_ruolo_tributario obda:Rappresentazione)
SubClassOf(obda:Rappresentazione_nel_ruolo_tributario ObjectAllValuesFrom(obda:rappresentazione_fatta_da ObjectOneOf(obda:ACI)))
AnnotationAssertion(rdfs:comment obda:Regione "Le regioni, assieme ai comuni, alle province, alle città metropolitane  e allo Stato centrale, sono uno dei cinque elementi costitutivi della Repubblica Italiana. Ogni regione è, in particolare, un ente territoriale  con propri statuti, poteri (anche legislativi) e funzioni, secondo i principi fissati dalla Costituzione della Repubblica Italiana, come stabilito dall'art. 114, II comma della carta costituzionale.  
Le regioni, secondo quanto indicato dall'art. 131 della Costituzione, sono venti. Cinque di queste sono dotate di uno statuto speciale di autonomia ed una di queste, il Trentino-Alto Adige, è costituita da due province autonome, dotate cioè di poteri legislativi analoghi a quelli delle regioni dell'ordinamento italiano (Trento e Bolzano)."^^xsd:string)
EquivalentClasses(obda:Regione ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_regione) owl:Thing))
SubClassOf(obda:Regione ObjectAllValuesFrom(obda:ha_circoscrizione obda:Circoscrizione_regionale))
AnnotationAssertion(rdfs:comment obda:Rimorchio "Un rimorchio è un veicolo destinato ad essere trainato da parte di autoveicoli e filoveicoli equipaggiati con sistemi di traino opportuni, detti motrici."^^xsd:string)
DisjointClasses(obda:Rimorchio obda:Semirimorchio)
AnnotationAssertion(rdfs:comment obda:Semirimorchio "Un semirimorchio è un veicolo destinato al traino da parte di un trattore stradale costruito in modo tale che una parte di esso si sovrapponga all'unità motrice e che una parte notevole della sua massa o del suo carico sia sopportata da detta motrice."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Soggetto "Un soggetto  è una qualunque entità che gioca un qualsivoglia ruolo nell'ambito della fiscalità dell'auto. Un soggetto  può essere una persona  (fisica  o giuridica ), oppure un'organizzazione ."^^xsd:string)
EquivalentClasses(obda:Soggetto ObjectSomeValuesFrom(obda:ha_stato_di_soggetto owl:Thing))
SubClassOf(obda:Soggetto obda:Entita_avente_stati)
AnnotationAssertion(rdfs:comment obda:Stato "L'ontologia ha un certo numero di concetti \"temporizzati\". Questi classificano oggetti per come essi sono osservabili in diversi istanti temporali. L'intervallo di tempo in cui le proprietà dell'oggetto che sono di interesse per l'ontologia non cambiano è denotato tramite uno stato. Gli istanti in cui una o più proprietà dell'oggetto cambiano, sono i tempi di discontinuità e definiscono gli estremi di uno stato, o in altri termini il suo inizio e la sua fine. Due stati contigui nel tempo avranno la fine di uno pari all'inizio dell'altro. Nell'ontologia si è deciso di introdurre uno stato corrispondente ad un oggetto ogni qual volta cambia il valore di una sua proprietà rilevante.
 A titolo di esempio si consideri una persona. La sua data di nascita è una proprietà che non varia nel tempo, ed è pertanto considerata una proprietà rigida, e quindi sarà associata direttamente alla persona. Il suo indirizzo di residenza è invece una proprietà che può variare nel tempo, e pertanto sarà associata ai suoi stati. I punti di discontinuità tra gli stati rappresentano i momenti in cui la persona ha cambiato residenza."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_con_fermo_amministrativo "Uno stato con fermo amministrativo  è uno stato con vincoli o gravami  che fa seguito ad un fermo amministrativo"^^xsd:string)
SubClassOf(obda:Stato_con_fermo_amministrativo obda:Stato_con_sospensione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:Stato_con_ipoteca "Il concetto Stato_con_ipoteca  specializza il concetto Stato_con_ipoteca_o_privilegio e denota fra gli stati su cui grava una ipoteca o un privilegio."^^xsd:string)
DisjointClasses(obda:Stato_con_ipoteca obda:Stato_con_privilegio)
AnnotationAssertion(rdfs:comment obda:Stato_con_ipoteca_o_privilegio "Uno stato con ipoteca o privilegio  è uno stato con vincoli o gravami  nel quale si trova un veicolo su cui è registrata una ipoteca o privilegio, (ma che non necessariamente è anche soggetto ad un ulteriore vincolo) e che quindi nello stato in questione risulta dato in garanzia di un credito altrui."^^xsd:string)
EquivalentClasses(obda:Stato_con_ipoteca_o_privilegio ObjectUnionOf(obda:Stato_con_ipoteca obda:Stato_con_privilegio))
EquivalentClasses(obda:Stato_con_ipoteca_o_privilegio DataSomeValuesFrom(obda:tipo_credito rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:Stato_con_obbligo_di_registrazione_al_PRA "Uno stato con obbligo di registrazione al PRA  è uno stato di un veicolo per il quale vi è l'obbligo di registrazione al Pubblico Registro Automobilistico (PRA)."^^xsd:string)
SubClassOf(obda:Stato_con_obbligo_di_registrazione_al_PRA obda:Stato_di_veicolo)
SubClassOf(obda:Stato_con_obbligo_di_registrazione_al_PRA ObjectAllValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_registrabile_al_PRA))
AnnotationAssertion(rdfs:comment obda:Stato_con_perdita_di_possesso "Lo stato con perdita di possesso  è uno stato di veicolo che segue la registrazione della perdita del possesso del veicolo."^^xsd:string)
SubClassOf(obda:Stato_con_perdita_di_possesso obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:Stato_con_pignoramento "Uno stato con pignoramento  è uno stato con vincoli o gravami  che fa seguito ad un pignoramento ."^^xsd:string)
SubClassOf(obda:Stato_con_pignoramento obda:Stato_con_sospensione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:Stato_con_privilegio "Il concetto Stato con privilegio  specializza il concetto Stato_con_ipoteca_o_privilegio e denota fra gli stati con ipoteca o privilegio quelli su cui è registrato un privilegio. Con l’entrata in vigore del codice civile, i privilegi iscritti sugli autoveicoli sono stati considerati come ipoteche."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_con_registrazione_al_PRA "Uno stato di veicolo è con registrazione al PRA quando è stato assolto l'obbligo di comunicazione al PRA delle caratteristiche del veicolo in quello stato."^^xsd:string)
SubClassOf(obda:Stato_con_registrazione_al_PRA obda:Stato_di_veicolo)
SubClassOf(obda:Stato_con_registrazione_al_PRA ObjectSomeValuesFrom(obda:stato_comunicato_a ObjectOneOf(obda:ACI)))
SubClassOf(obda:Stato_con_registrazione_al_PRA ObjectAllValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_registrabile_al_PRA))
DisjointClasses(obda:Stato_con_registrazione_al_PRA obda:Stato_rappresentato)
AnnotationAssertion(rdfs:comment obda:Stato_con_sospensione_dalla_circolazione "Uno stato con sospensione della carta di circolazione  è uno stato di veicolo  che si caratterizza per la sospensione della carta di circolazione del veicolo stesso."^^xsd:string)
SubClassOf(obda:Stato_con_sospensione_dalla_circolazione obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:Stato_con_vincoli "Il concetto Stato_con_vincoli specializza il concetto Stato_con_vincoli_o_gravami  e denota gli stati fra questi in cui il  veicolo  è soggetto ad un vincolo (ad esempio, fermo amministrativo, sequestro, pignoramento, etc.), ma non necessariamente anche ad ipoteca o privilegio."^^xsd:string)
EquivalentClasses(obda:Stato_con_vincoli ObjectUnionOf(obda:Stato_con_fermo_amministrativo obda:Stato_con_pignoramento obda:Stato_derivato_da_congelamento_beni obda:Stato_derivato_da_sequestro obda:Stato_di_veicolo_in_concordato_preventivo obda:Stato_di_veicolo_in_massa_fallimentare))
AnnotationAssertion(rdfs:comment obda:Stato_con_vincoli_o_gravami "Uno stato con vincoli o gravami  è uno stato  di un veicolo  sul quale pendono, in quello stato, specifici vincoli o gravami (ad esempio, ipoteche, fermi amministrativi, etc.)."^^xsd:string)
EquivalentClasses(obda:Stato_con_vincoli_o_gravami ObjectUnionOf(obda:Stato_con_ipoteca_o_privilegio obda:Stato_con_vincoli))
EquivalentClasses(obda:Stato_con_vincoli_o_gravami ObjectSomeValuesFrom(obda:ha_vincolo_o_gravame owl:Thing))
SubClassOf(obda:Stato_con_vincoli_o_gravami obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:Stato_derivato_da_congelamento_beni "Uno stato derivato da congelamento di beni  è uno stato con vincoli o gravami  che fa seguito ad un congelamento di beni ."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_derivato_da_sequestro "Uno stato derivato da sequestro  è uno stato con vincoli o gravami  che fa seguito ad un sequestro ."^^xsd:string)
SubClassOf(obda:Stato_derivato_da_sequestro obda:Stato_con_sospensione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:Stato_di_cessazione_dalla_circolazione "Lo stato di cessazione dalla circolazione  è uno stato di veicolo che segue la registrazione della cessazione della circolazione  del veicolo."^^xsd:string)
EquivalentClasses(obda:Stato_di_cessazione_dalla_circolazione DataSomeValuesFrom(obda:tipo_cessazione_circolazione rdfs:Literal))
SubClassOf(obda:Stato_di_cessazione_dalla_circolazione ObjectIntersectionOf(obda:In_disuso obda:Stato_rappresentato_dal_PRA))
AnnotationAssertion(rdfs:comment obda:Stato_di_cessazione_di_attivita "Questo concetto denota stati nei quali la persona giuridica associata ha cessato la propria attività. Ad esempio, un ente pubblico soppresso è associato ad uno di questi stati."^^xsd:string)
SubClassOf(obda:Stato_di_cessazione_di_attivita obda:Stato_di_persona_giuridica)
AnnotationAssertion(rdfs:comment obda:Stato_di_luogo "Uno stato  di un luogo  è uno stato  che rappresenta le caratteristiche del luogo durante il periodo di validità dello stato stesso. Tra queste:
l'area_territoriale del luogo;
la denotazione del luogo ."^^xsd:string)
EquivalentClasses(obda:Stato_di_luogo ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_luogo) owl:Thing))
SubClassOf(obda:Stato_di_luogo obda:Stato)
AnnotationAssertion(rdfs:comment obda:Stato_di_persona "Uno stato  di una persona  è uno stato  che rappresenta le caratteristiche di quella persona durante il periodo di validità dello stato stesso."^^xsd:string)
EquivalentClasses(obda:Stato_di_persona ObjectUnionOf(obda:Stato_di_persona_fisica obda:Stato_di_persona_giuridica))
SubClassOf(obda:Stato_di_persona obda:Stato_di_soggetto)
AnnotationAssertion(rdfs:comment obda:Stato_di_persona_fisica "Uno stato  di una persona fisica  è uno stato  che rappresenta le caratteristiche di quella persona fisica durante il periodo di validità dello stato stesso."^^xsd:string)
DisjointClasses(obda:Stato_di_persona_fisica obda:Stato_di_persona_giuridica)
AnnotationAssertion(rdfs:comment obda:Stato_di_persona_giuridica "Uno stato  di una persona giuridica  è uno stato  che rappresenta le caratteristiche di quella persona giuridica durante il periodo di validità dello stato stesso."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_di_soggetto "Uno stato di soggetto  è uno stato  che rappresenta le caratteristiche di un soggetto valide solo durante il periodo di validità dello stato stesso. Tra queste:
la sede  del soggetto;
la residenza del soggetto ."^^xsd:string)
EquivalentClasses(obda:Stato_di_soggetto ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) owl:Thing))
AnnotationAssertion(rdfs:comment obda:Stato_di_soggetto_iscritto_AIRE "Uno stato di soggetto iscritto all'AIRE  è uno stato di un soggetto  il quale è iscritto all'Anagrafe degli Italiani Residenti all'Estero (AIRE) contenente i dati dei cittadini italiani che risiedono all'estero per un periodo superiore ai dodici mesi. L'AIRE è gestita dai Comuni sulla base dei dati e delle informazioni provenienti dalle Rappresentanze consolari all'estero."^^xsd:string)
SubClassOf(obda:Stato_di_soggetto_iscritto_AIRE obda:Stato_di_soggetto)
AnnotationAssertion(rdfs:comment obda:Stato_di_veicolo "Un veicolo dispone di un insieme di proprietà che possono variare nel tempo (ad esempio, la proprietà o il possesso del veicolo) e per le quali interessa tenere traccia della variazione. Lo stato di un veicolo fotografa il valore di tali proprietà in un certo periodo del ciclo di vita di un veicolo. In un determinato stato di veicolo il valore di tali proprietà rimane costante."^^xsd:string)
EquivalentClasses(obda:Stato_di_veicolo ObjectUnionOf(obda:In_disuso obda:In_uso))
EquivalentClasses(obda:Stato_di_veicolo ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) owl:Thing))
SubClassOf(obda:Stato_di_veicolo obda:Stato)
AnnotationAssertion(rdfs:comment obda:Stato_di_veicolo_di_epoca "Uno stato di veicolo d'epoca  è uno stato di un veicolo  che ha più di vent'anni. Alcuni di tali veicoli sono dichiarati di interesse storico e sono agevolati fiscalmente. Quanto detto vale per l'Italia."^^xsd:string)
SubClassOf(obda:Stato_di_veicolo_di_epoca obda:Stato_di_veicolo)
AnnotationAssertion(rdfs:comment obda:Stato_di_veicolo_in_concordato_preventivo "Uno stato di veicolo in concordato preventivo   è uno stato con vincoli o gravami  che fa seguito ad un concordato preventivo"^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_di_veicolo_in_massa_fallimentare "Uno stato in massa fallimentare  di un veicolo  è uno stato con vincoli o gravami  che fa seguito ad un fallimento  che acquisisce quel veicolo alla massa fallimentare."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_di_veicolo_rappresentato_in_formalita "Questo concetto denota lo stato di un veicolo come rappresentato nell'ambito di una formalità. In altri termini, denota la rappresentazione che di un veicolo ha il soggetto PRA al momento in cui viene presentata una formalità sul veicolo stesso."^^xsd:string)
DisjointClasses(obda:Stato_di_veicolo_rappresentato_in_formalita ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_veicolo) obda:Veicolo_a_motore))
AnnotationAssertion(rdfs:comment obda:Stato_giuridico_di_veicolo "Uno stato giuridico di veicolo è uno stato di veicolo rappresentato dal PRA a seguito della esecuzione di una formalità  riguardante il veicolo e che ha valore giuridico."^^xsd:string)
DisjointClasses(obda:Stato_giuridico_di_veicolo obda:Stato_non_giuridico_di_veicolo)
AnnotationAssertion(rdfs:comment obda:Stato_non_giuridico_di_veicolo "Uno stato non giuridico di veicolo è uno stato di veicolo rappresentato dal PRA e che non ha valore giuridico in quanto su di esso non sono stati fatti i riscontri necessari (si veda anche Finalita_riscontro_stato_giuridico_originario)."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_rappresentato "Uno stato rappresentato è una rappresentazione di uno stato di un oggetto del mondo effettuata da un soggetto.
A margine sottolineiamo che gli oggetti rappresentati non hanno di fatto proprietà rigide (cioè proprietà che non si modificano nel tempo). Se ad esempio consideriamo la rappresentazione di una persona (fatta da un determinato soggetto), la sua data di nascita, che nel mondo è una proprietà rigida, nella rappresentazione è una proprietà modificabile perchè potenzialmente soggetta ad errore. 
La scelta di modellare esplicitamente gli stati rappresentati in questa ontologia consente di effettuare confronti fra stati rappresentati da soggetti diversi, e che si riferiscono allo stesso oggetto nello stesso periodo di tempo, al fine di individuare disallineamenti nelle varie rappresentazioni."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Stato_rappresentato_dal_PRA "Nell'ambito dell'ontologia, una particolare importanza è assunta dagli stati dei veicoli rappresentati dal PRA, che sono quelle rappresentazioni di stati di veicolo gestite dal Pubblico Registro Automobilistico."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Strada "Una strada  è un luogo  la cui funzione è consentire il transito di persone fisiche , veicoli  o animali rendendo possibile il cambiamento della loro posizione. Generalmente la sua area presenta una struttura (spesso composta di materiali lapidei) a strati, da cui il nome, sormontata da una pavimentazione destinata a migliorare l'aderenza delle ruote ed il comfort di persone e merci."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Targa_estera "Una Targa_estera  targa estera è la targa  di un veicolo  immatricolato in all'estero."^^xsd:string)
DisjointClasses(obda:Targa_estera obda:Targa_nazionale)
AnnotationAssertion(rdfs:comment obda:Targa_nazionale "Una targa  di un veicolo  è nazionale  se è relativa all'immatricolazione di quel veicolo in Italia. Le targhe nazionali sono realizzate dall'Istituto Poligrafico e Zecca dello Stato e recano il marchio ufficiale della Repubblica Italiana."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Targa_speciale "Una targa veicolo  è Targa_speciale  se appartiene:
ad un veicolo  della Croce rossa (C.R.I. ...)
ad un veicolo dei Vigili del fuoco (VF ...)
ad un veicolo della Polizia di Stato (POLIZIA ...)
ad un veicolo del Corpo forestale dello Stato (CFS ... o CF ...)
ad un veicolo di una delle forze armate nazionali (ad esempio i Carabinieri: CC ...)
ad un veicolo della Associazione dei cavalieri italiani del sovrano militare ordine di Malta (SMOM ...)
ad un veicolo della Protezione civile (DPC ...)
se è una targa diplomatica (Corpo Consolare: CC, Corpo Diplomatico: CD, Nazioni unite: UN)"^^xsd:string)
SubClassOf(obda:Targa_speciale obda:Targa_veicolo)
AnnotationAssertion(rdfs:comment obda:Targa_veicolo "La targa , intesa sotto il profilo funzionale, è ciò che permette al pubblico di identificare a vista uno specifico veicolo  in circolazione, così come esso è pubblicamente registrato. Il primo uso di questo concetto sembra risalire ad una disposizione dello Stato Pontificio del 11 febbraio 1851. Questa disposizione, nata per evitare che i briganti utilizzassero i carri e i calessi rubati per trasportare la refurtiva o per fuggire più velocemente, obbligava i possessori di calessi, vetture o carri all'uso di una targa d'ottone a lettere e cifre in rilievo su fondo di colore diverso per ogni legazione dello Stato: rosso per Bologna, verde per Ferrara, nero per Ravenna, ceruleo per Forlì.Sotto il profilo fisica, una targa è una piccola placca, in genere di materiale metallico, fissata tramite un supporto ad un veicolo. Sulla sua superficie è riportata una serie di cifre o una combinazione di lettere e cifre in grado di essere vista anche a considerevole distanza, anche in condizioni ambientali sfavorevoli e anche da apparecchi automatici, per identificare in modo univoco, tramite l'associazione tra la combinazione e il veicolo, il veicolo stesso. Generalmente  un veicolo ha due targhe, una davanti e una sul retro. Tuttavia in diversi casi è sufficiente una di esse, in genere quella posteriore, come nel caso dei motoveicoli . Naturalmente, ogni targa montata sullo stesso veicolo dovrà comunque riportare la medesima combinazione."^^xsd:string)
EquivalentClasses(obda:Targa_veicolo ObjectUnionOf(obda:Targa_estera obda:Targa_nazionale))
EquivalentClasses(obda:Targa_veicolo ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_targa) owl:Thing))
EquivalentClasses(obda:Targa_veicolo ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_targa_precedente) owl:Thing))
EquivalentClasses(obda:Targa_veicolo ObjectSomeValuesFrom(ObjectInverseOf(obda:veicolo_ha_targhe_assegnate) owl:Thing))
EquivalentClasses(obda:Targa_veicolo DataSomeValuesFrom(obda:numero_targa rdfs:Literal))
SubClassOf(obda:Targa_veicolo obda:Entita_non_avente_stati)
AnnotationAssertion(rdfs:comment obda:Tram "Un tram è un veicolo ferroviario (sia mezzo di trazione sia materiale rimorchiato) , ovvero un mezzo di trasporto su rotaia, tipico ma non esclusivo nel trasporto pubblico urbano, atto alla circolazione su infrastrutture tranviarie ove la circolazione avviene in regime di marcia a vista."^^xsd:string)
SubClassOf(obda:Tram obda:Veicolo_ferroviario)
AnnotationAssertion(rdfs:comment obda:Trasporto_specifico "Gli autoveicoli per trasporto specifico sono veicolo destinati al trasporto di determinate cose o di persone in particolari condizioni, caratterizzati dall'essere muniti permanentemente di speciali attrezzature.
Tali veicoli sono equipaggiati con carrozzerie idonee al trasporto di determinate merci alle quali sono abbinate specifiche attrezzature necessarie per agevolare il carico o lo scarico, la conservazione, la lavorazione del materiale trasportato."^^xsd:string)
SubClassOf(obda:Trasporto_specifico obda:In_uso)
AnnotationAssertion(rdfs:comment obda:Trattore_agricolo "Un trattore agricolo  è una macchina agricola semovente  utilizzata in agricoltura per trainare attrezzature specifiche per i lavori agricoli o un rimorchio ."^^xsd:string)
SubClassOf(obda:Trattore_agricolo obda:Macchina_agricola_semovente)
AnnotationAssertion(rdfs:comment obda:Trattore_stradale "Un trattore stradale  è un autoveicolo  adibito esclusivamente al traino di semirimorchi  con cui, una volta agganciato, forma particolari complessi veicolari  denominati autoarticolati .  
Sul piano meccanico è un veicolo equiparato all'autocarro , di cui è tecnicamente una derivazione progettuale e con cui condivide le denominazioni commerciali dei modelli di listino delle varie case produttrici, anche se non può essere definito tale vista l'incapacità di caricare e trasportare autonomamente merci senza l'ausilio del semirimorchio. Data la sua particolare destinazione d'uso, il trattore stradale è sempre dotato di sistemi di traino opportuni per la categoria di semirimorchi a lui destinati."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Triciclo "Un triciclo  è un motoveicolo  a tre ruote simmetriche (due davanti e due dietro o una davanti e due dietro)."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Ufficio_periferico "Un ufficio è periferico quando la sua funzione è destinata a intervenire solo su in un certo luogo, che deve essere contenuto nella circoscrizione di competenza dell'ente a cui l'ufficio appartiene.
Il luogo che costituisce l'ambito di intervento dell'ufficio è la circoscrizione di quell'ufficio.
Un ufficio che non è periferico è centrale ."^^xsd:string)
SubClassOf(obda:Ufficio_periferico ObjectAllValuesFrom(obda:ha_circoscrizione obda:Circoscrizione_di_ufficio))
AnnotationAssertion(rdfs:comment obda:Uso_di_soccorso "Un uso di soccorso  è uno stato  che un veicolo  possiede quando è usato come mezzo di soccorso. La seguente lista riporta alcuni casi di uso di soccorso:
Ambulanza di trasporto, attrezzata essenzialmente per il trasporto di infermi o  infortunati, con eventuale dotazione di semplici attrezzature di assistenza. 
Ambulanza di soccorso: attrezzate per il  trasporto  di  infermi  o  infortunati  e  per  il servizio di pronto soccorso, dotate  di  specifiche  attrezzature  di assistenza. 
 Automedica: automezzo per il soccorso avanzato con personale medico ed infermieristico."^^xsd:string)
SubClassOf(obda:Uso_di_soccorso obda:Uso_speciale)
AnnotationAssertion(rdfs:comment obda:Uso_per_locazione_senza_conducente "Un uso per locazione senza conducente  è uno stato  che un veicolo  possiede quando il suo proprietario  si obbliga a permettere ad altre soggetti  (locatari) il possesso  del veicolo per un dato tempo in cambio di un determinato corrispettivo."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_noleggio_con_conducente "Un uso per noleggio con conducente  è uno stato  che un veicolo  possiede quando il veicolo è usato per prestazioni di trasporto a tempo o a viaggio in un quadro di trasporto pubblico non di linea."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_pubblica_sicurezza "Un uso per pubblica sicurezza  è uno stato di uso pubblico  che un veicolo  possiede quando è usato da una autorità di pubblica sicurezza nell'espletamento dei propri servizi."^^xsd:string)
SubClassOf(obda:Uso_per_pubblica_sicurezza obda:Uso_pubblico)
AnnotationAssertion(rdfs:comment obda:Uso_per_scuola_guida "Un uso per scuola guida  è uno stato  che un veicolo  possiede quando:
è immatricolato ad uso esclusivo di autoscuola;
è immatricolato a nome del titolare o dell'ente o della società o del consorzio  che  ha  costituito  il centro d'istruzione alla guida;
vi sono installati doppi comandi per  frizione e freno;
se non è un motociclo , è munito di apposita scritta \"SCUOLA GUIDA\".
Tale uso può riguardare: motocicli , autovetture , autocarri , trattori  con il loro semirimorchio ."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_servizio_di_linea "Un uso per servizio di linea  è uno stato  che un veicolo  possiede quando:
alterna periodi di servizio a periodi di \"fuori servizio\";
i periodi di servizio sono suddivisi in corse;
ogni corsa corrisponde (salvo condizioni eccezionali) alla percorrenza di un itinerario prestabilito lungo il quale sono disposte dei particolari luoghi detti \"fermate\" nei quali ogni corsa (salvo eccezioni) del veicolo si interrompe per un tempo più o meno breve in modo da consentire alle cose e/o persone di salire o scendere dal veicolo stesse.
Un esempio di veicolo che può avere un tale stato (stato che al tempo stesso consente il trasporto di passeggeri) è un autobus."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_servizio_di_piazza "Un uso per servizio di piazza  è uno stato  che un veicolo  possiede quando:
alterna periodi di servizio da periodi di fuori servizio\"
i periodi di servizio sono suddivisi in corse
ogni corsa corrisponde alla percorrenza di un itinerario stabilito per la corsa stessa a copertura dei fabbisogni di trasporto di una o più persone . 
Un esempio di veicolo che può avere un tale stato (stato che al tempo stesso consente il trasporto  di passeggeri  è un taxi)."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_terzi "Per uso del veicolo s'intende la sua utilizzazione economica; si ha l'uso di terzi quando un veicolo è utilizzato, dietro corrispettivo, nell'interesse di persone diverse dall'intestatario della carta di circolazione."^^xsd:string)
DisjointClasses(obda:Uso_per_terzi obda:Uso_proprio)
AnnotationAssertion(rdfs:comment obda:Uso_per_traino "Uno stato in uso per traino specializza uno stato di veicolo con abilitazione del veicolo a trainare rimorchi."^^xsd:string)
SubClassOf(obda:Uso_per_traino obda:In_uso)
AnnotationAssertion(rdfs:comment obda:Uso_per_trasporto_cose "Un uso per trasportare cose  è uno stato  che un veicolo  possiede quando ha il permesso di muoversi sulla superficie terrestre trasportando cose. 
I veicoli che possono avere un tale stato comprendono:
autocarri : veicoli destinati al trasporto di cose e delle persone addette all'uso o al trasporto delle cose stesse;
autoveicoli per trasporto promiscuo: veicoli aventi una massa complessiva a pieno carico non superiore a 3,5 t o 4,5 t se a trazione elettrica o a batteria, destinati al trasporto di persone e di cose e capaci di contenere al massimo nove posti compreso quello del conducente;
trattori stradali : veicoli destinati esclusivamente al traino di rimorchi o semirimorchi;
autoveicoli per trasporti specifici: veicoli destinati al trasporto di determinate cose o di persone in particolari condizioni, caratterizzati dall'essere muniti permanentemente di speciali attrezzature relative a tale scopo; 
autoveicoli per uso speciale: veicoli caratterizzati dall'essere muniti permanentemente di speciali attrezzature e destinati prevalentemente al trasporto proprio; su tali veicoli è consentito il trasporto del personale e dei materiali connessi col ciclo operativo delle attrezzature e di persone e cose connesse alla destinazione d'uso delle attrezzature stesse;
autotreni : complessi di veicoli  costituiti da due unità distinte, agganciate, delle quali una motrice (lo stato in questo caso è quello del veicolo trainato );
autoarticolati : complessi di veicoli costituiti da un trattore e da un semirimorchio (vale quanto detto sopra);
mezzi d'opera: veicoli o complessi di veicoli dotati di particolare attrezzatura per il carico e il trasporto di materiali di impiego o di risulta dell'attività edilizia, stradale, di escavazione mineraria e materiali assimilati ovvero che completano, durante la marcia, il ciclo produttivo di specifici materiali per la costruzione edilizia (nel caso di complessi di veicoli, vale quanto detto sopra)."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_trasporto_non_contemporaneo "Un uso per trasporto non contemporaneo  è uno stato  che un veicolo  possiede quando può trasportare sia cose che passeggeri, ma non contemporaneamente."^^xsd:string)
DisjointClasses(obda:Uso_per_trasporto_non_contemporaneo obda:Uso_per_trasporto_promiscuo)
AnnotationAssertion(rdfs:comment obda:Uso_per_trasporto_persone "Un uso per trasportare persone  è uno stato  che un veicolo  possiede quando ha il permesso di muoversi sulla superficie terrestre trasportando passeggeri . I veicoli che possono avere un tale stato comprendono:
le autovetture : veicoli aventi al massimo nove posti, compreso quello del conducente;
gli autobus : veicoli equipaggiati con più di nove posti compreso quello del conducente;
gli autocaravan : veicoli aventi una speciale carrozzeria ed attrezzati permanentemente per essere adibiti al trasporto e all'alloggio di sette persone al massimo, compreso il conducente;
gli autosnodati: autobus composti da due tronconi rigidi collegati tra loro da una sezione snodata. Su questi tipi di veicoli i compartimenti viaggiatori situati in ciascuno dei due tronconi rigidi sono comunicanti. La sezione snodata permette la libera circolazione dei viaggiatori tra i tronconi rigidi."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_per_trasporto_promiscuo "Un uso per trasporto promiscuo  è uno stato  che un veicolo  possiede quando ha il permesso di muoversi sulla superficie terrestre trasportando sia cose sia passeggeri ."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_privato "Un uso privato  è uno stato  che un veicolo  possiede quando è usato da una persona  per i suoi scopi (la quale quindi possiede  il veicolo stesso)."^^xsd:string)
DisjointClasses(obda:Uso_privato obda:Uso_pubblico)
AnnotationAssertion(rdfs:comment obda:Uso_proprio "Per uso del veicolo s'intende la sua utilizzazione economica; si ha l'uso proprio quando un veicolo non è utilizzato dietro corrispettivo."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_pubblico "Sono previsti due usi pubblici: 
per trasporto di persone o di cose in servizio da piazza, riguardanti taxi e NCC
per trasporto di persone o di cose in servizio di linea, a favore di imprese esercenti servizi di trasporto pubblico locale."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Uso_speciale "L'uso speciale è definito dal codice della strada per quei veicoli che sono \"caratterizzati dall'essere muniti permanentemente di speciali attrezzature e destinati prevalentemente al trasporto proprio. Su tali veicoli è consentito il trasporto del personale e dei materiali connessi col ciclo operativo delle attrezzature, e di persone e cose connesse alla destinazione d'uso delle attrezzature stesse\";  
Un uso di un veicolo viene esercitato in uno suo stato, che è appunto uno stato di uso speciale. Esempi di uso speciale secondo il codice della strada sono (l'elenco non è esaustivo): 
autospazzatrici;
autoambulanze;
autofunebri;
autoveicoli per il soccorsostradale;
autoveicoli con pedana o cestelloelevabile;
autoveicoli per radio, televisione,cinema;
autoscavatrici;
autoveicoli per uso negozio."^^xsd:string)
SubClassOf(obda:Uso_speciale obda:In_uso)
AnnotationAssertion(rdfs:comment obda:Uso_urbano "Un uso urbano  di un veicolo  è uno uso pubblico  di quel veicolo consentito solo in aree urbane."^^xsd:string)
SubClassOf(obda:Uso_urbano obda:Uso_pubblico)
AnnotationAssertion(rdfs:comment obda:Veicolo "Si intendono per veicoli tutte le macchine di qualsiasi specie, che circolano sulle strade guidate dall'uomo. Non rientrano nella definizione di veicolo: 
le macchine per uso di bambini, le cui caratteristiche non superano i limiti stabiliti dal regolamento;
 le macchine per uso di invalidi, rientranti tra gli ausili medici secondo le vigenti disposizioni comunitarie, anche se asservite da motore."^^xsd:string)
EquivalentClasses(obda:Veicolo ObjectUnionOf(obda:Veicolo_a_motore obda:Veicolo_non_a_motore))
EquivalentClasses(obda:Veicolo ObjectUnionOf(obda:Veicolo_non_registrabile_al_PRA obda:Veicolo_registrabile_al_PRA))
EquivalentClasses(obda:Veicolo ObjectSomeValuesFrom(obda:ha_stato_di_veicolo owl:Thing))
EquivalentClasses(obda:Veicolo DataSomeValuesFrom(obda:ID_veicolo rdfs:Literal))
EquivalentClasses(obda:Veicolo DataSomeValuesFrom(obda:tipo_di_veicolo rdfs:Literal))
EquivalentClasses(obda:Veicolo DataSomeValuesFrom(obda:tipo_di_veicolo_classificazione_ACI rdfs:Literal))
SubClassOf(obda:Veicolo obda:Entita_avente_stati)
AnnotationAssertion(rdfs:comment obda:Veicolo_a_motore "L'insieme dei veicoli a motore  cattura tutti quei veicoli operanti su terra che sono spinti da una trazione meccanica. Le due principali tipologie di veicolo a motore sono gli autoveicoli  ed i motoveicoli ."^^xsd:string)
EquivalentClasses(obda:Veicolo_a_motore ObjectUnionOf(obda:Veicolo_con_motore_a_combustione obda:Veicolo_con_motore_elettrico))
EquivalentClasses(obda:Veicolo_a_motore DataSomeValuesFrom(obda:tipo_motore rdfs:Literal))
DisjointClasses(obda:Veicolo_a_motore obda:Veicolo_non_a_motore)
AnnotationAssertion(rdfs:comment obda:Veicolo_a_trazione_di_veicolo_a_motore "Un veicolo a trazione di veicolo a motore  è un veicolo non a motore  predisposto per essere trainato da un Veicolo_a_motore. Rientrano in tale classificazione i rimorchi e i semirimorchi."^^xsd:string)
SubClassOf(obda:Veicolo_a_trazione_di_veicolo_a_motore obda:Veicolo_non_a_motore)
AnnotationAssertion(rdfs:comment obda:Veicolo_con_motore_a_combustione "Questo concetto denota i veicoli equipaggiati con con motore a combustione interna."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Veicolo_con_motore_elettrico "Un veicolo a motore  è con motore elettrico  se ha, appunto, un motore elettrico che utilizza come fonte di energia primaria l'energia chimica immagazzinata in un serbatoio energetico costituito da una o più batterie ricaricabili e resa disponibile da queste al motore sotto forma di energia elettrica.
Tra questi veicoli vi sono i veicoli con motore ibrido, i quali sono anche con motore a combustione interna ."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Veicolo_con_numero_di_telaio "Un veicolo con numero di telaio  è un veicolo  provvisto di numero di telaio ."^^xsd:string)
SubClassOf(obda:Veicolo_con_numero_di_telaio obda:Veicolo)
SubClassOf(obda:Veicolo_con_numero_di_telaio DataSomeValuesFrom(obda:data_immatricolazione rdfs:Literal))
SubClassOf(obda:Veicolo_con_numero_di_telaio DataSomeValuesFrom(obda:numero_telaio rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:Veicolo_ferroviario "Un veicolo ferroviaro  è un veicolo  non registrabile al PRA  che costituisce un elemento dell'insieme del materiale rotabile (viaggiante su rotaia). 
In tale definizione sono comprese le due categorie di veicoli (non disgiunte l'una dall'altra):
i mezzi di trazione (o materiali di trazione, o materiali motori), comprendenti le locomotive e gli automotori, le automotrici;
il materiale rimorchiato, che è adibito al trasporto di viaggiatori (carrozze o vetture passeggeri), di bagagli (bagagliai), di posta (ambulanti postali), di merci (carri), o di attrezzi e materiali per la manutenzione dell'infrastruttura ferroviaria o di altri materiali rotabili (carri gru, carri officina, carri soccorso).
Un conducente  di un mezzo di trazione può dover operare in due modalità, a seconda del tipo di mezzo:
marcia a vista, che si basa sulla capacità del conducente di stabilire la velocità del veicolo guidato in modo da arrestarlo in tempo al presentarsi di una qualunque situazione di ostacolo o di pericolo;
marcia regolata mediante segnali o sistemi di sicurezza, commutabile in ogni momento in marcia a vista nel caso il conducente (o un dirigente preposto alla circolazione) valuti il sussistere di guasti o anormalità. 
Tale concetto è di interesse per l'ontologia limitatamente al coinvolgimento delle sue istanze ad eventi ."^^xsd:string)
SubClassOf(obda:Veicolo_ferroviario obda:Veicolo_non_registrabile_al_PRA)
AnnotationAssertion(rdfs:comment obda:Veicolo_non_a_motore "Un veicolo non a motore  è un veicolo  privo di propulsore e quindi senza capacità autonoma di cambiare la sua posizione nello spazio. Un tale veicolo può essere spinto dalla forza dell'uomo o degli animali, come la bicicletta o il carro, rispettivamente. Sono comprese nella categoria dei veicoli privi di motore anche le biciclette a pedalata assistita, le quali sono considerate velocipedi anche se dotate di un motore elettrico ausiliario che agevola la pedalata."^^xsd:string)
AnnotationAssertion(rdfs:comment obda:Veicolo_non_registrabile_al_PRA "Un veicolo non registrabile al PRA  è un veicolo provvisto di numero di telaio  che ha caratteristiche tali da non poter essere registrato al PRA. Si noti che un tale veicolo non è necessariamente privo di registrazione al PRA . Naturalmente una eventuale sua registrazione non sarebbe corretta."^^xsd:string)
DisjointClasses(obda:Veicolo_non_registrabile_al_PRA obda:Veicolo_registrabile_al_PRA)
AnnotationAssertion(rdfs:comment obda:Veicolo_registrabile_al_PRA "Un veicolo registrabile al PRA  è un veicolo provvisto di numero di telaio  che ha caratteristiche tali da poter essere registrato al PRA. Si noti che un tale veicolo non è necessariamente registrato al PRA ."^^xsd:string)
SubClassOf(obda:Veicolo_registrabile_al_PRA obda:Veicolo_con_numero_di_telaio)
AnnotationAssertion(rdfs:comment obda:Veicolo_rottamato "Un veicolo rottamato  è uno stato di un veicolo  in disuso  che si caratterizza per via della demolizione del veicolo, ovvero la perdita della sua integrità e identità fisica."^^xsd:string)
SubClassOf(obda:Veicolo_rottamato obda:Stato_di_cessazione_dalla_circolazione)
AnnotationAssertion(rdfs:comment obda:Vincolo_o_gravame "Questo concetto denota i vicoli ed i gravami a cui possono essere soggetti i veicoli. In particolare, le sue istanza denotano le possibili tipologie di vincoli oltre all'ipoteca o privilegio (si vedano anche le sottoclassi di Stato_con_vincoli_o_gravami). Più precisamente fra le sue istanze ci sono quelle corrispondenti ai seguenti tipi di vincoli o gravami :
veicolo con Ipoteca o privilegio
veicolo in Fermo amministrativo
veicolo sottoposto a Sequestro
veicolo in Massa Fallimentare
veicolo con Pignoramento
veicolo in Concordato preventivo
veicolo soggetto a Congelamento dei beni"^^xsd:string)
EquivalentClasses(obda:Vincolo_o_gravame ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_vincolo_o_gravame) owl:Thing))
EquivalentClasses(obda:Vincolo_o_gravame DataSomeValuesFrom(obda:tipo_vincolo_o_gravame rdfs:Literal))
AnnotationAssertion(rdfs:comment obdaod:Alimentazione "Una istanza di questo concetto denota una alimentazione utilizzata nei data set che ACI pubblica in formato aperto. Ciascuna istanza corrisponde a diverse istanze di alimentazione così come usualmente classificata nei sistemi informativi di ACI.
Istanze notevoli di questo concetto sono
aod:Alimentazione#Gasolio, che denota un'alimentazione esclusivamente a Gasolio;
aod:Alimentazione#Benzina, che denota un'alimentazione esclusivamente a Benzina;
aod:Alimentazione#Ibrido_Benzina_Elettrico, che denota un'alimentazione ibrida Benzina/Elettrica, nel senso che il veicolo ha un motore elettrico ed un diverso motore a benzina;
aod:Alimentazione#Ibrido_Gasolio_Elettrico, che denota un'alimentazione ibrida Gasolio/Elettrica, nel senso che il veicolo ha un motore elettrico ed un diverso motore a gasolio;
aod:Alimentazione#Benzina_e_Metano, che denota un'alimentazione a Benzina o a Metano (il veicolo ha comunque un unico motore)
aod:Alimentazione#Benzina_e_Gas_Liquido, che denota un'alimentazione a Benzina o a Gas (il veicolo ha comunque un unico motore)
aod:Alimentazione#Elettrica, che denota un'alimentazione totalmente elettrica"^^xsd:string)
EquivalentClasses(obdaod:Alimentazione ObjectSomeValuesFrom(ObjectInverseOf(obda:est_aggregata_in) owl:Thing))
AnnotationAssertion(rdfs:comment obdaod:DataSet "Un dataset è una risorsa elettronica pubblicabile sul web contenente un insieme di dati. La valorizzazione delle sue proprietà consente di fatto di esprimere metadati sul dataset."^^xsd:string)
EquivalentClasses(obdaod:DataSet ObjectSomeValuesFrom(obdaod:contiene_osservazione owl:Thing))
EquivalentClasses(obdaod:DataSet DataSomeValuesFrom(dcterms:available rdfs:Literal))
EquivalentClasses(obdaod:DataSet DataSomeValuesFrom(dcterms:description rdfs:Literal))
EquivalentClasses(obdaod:DataSet DataSomeValuesFrom(dcterms:format rdfs:Literal))
EquivalentClasses(obdaod:DataSet DataSomeValuesFrom(dcterms:identifier rdfs:Literal))
EquivalentClasses(obdaod:DataSet DataSomeValuesFrom(dcterms:issued rdfs:Literal))
EquivalentClasses(obdaod:DataSet DataSomeValuesFrom(dcterms:title rdfs:Literal))
SubClassOf(obdaod:DataSet ObjectSomeValuesFrom(dcterms:contributor owl:Thing))
SubClassOf(obdaod:DataSet ObjectSomeValuesFrom(dcterms:creator ObjectOneOf(obda:ACI)))
SubClassOf(obdaod:DataSet ObjectSomeValuesFrom(dcterms:license owl:Thing))
SubClassOf(obdaod:DataSet ObjectSomeValuesFrom(dcterms:publisher ObjectOneOf(obda:ACI)))
SubClassOf(obdaod:DataSet ObjectSomeValuesFrom(dcterms:rightsHolder ObjectOneOf(obda:ACI)))
AnnotationAssertion(rdfs:comment obdaod:DataSet_statistico "Un dataset di tipo statistico è un particolare tipo di dataset che contiene dati aggregati e non di dettaglio."^^xsd:string)
SubClassOf(obdaod:DataSet_statistico qb:DataSet)
SubClassOf(obdaod:DataSet_statistico obdaod:DataSet)
AnnotationAssertion(rdfs:comment obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale "Questo concetto denota osservazioni realtive alle cessazioni dalla circolazione per demolizione classificate per comune in un determinato anno. Ogni sua istanza denota quindi l'osservazione effettuata per un dato comune nell'anno di riferimento."^^xsd:string)
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale ObjectSomeValuesFrom(obdaod:basato_su obda:Finalita_cessazione_circolazione_per_demolizione))
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale ObjectSomeValuesFrom(obdaod:ha_proprieta_dimensionale_ente_territoriale owl:Thing))
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale DataSomeValuesFrom(obdaod:ha_misura_conteggio rdfs:Literal))
AnnotationAssertion(rdfs:comment obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro "Questo concetto denota osservazioni relative alle cessazioni dalla circolazione per demolizione classificate per comune e per classe euro in un determinato anno. Ogni sua istanza denota quindi l'osservazione effettuata per un dato comune ed una dato valore della classe euro nell'anno di riferimento."^^xsd:string)
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro ObjectSomeValuesFrom(obdaod:basato_su obda:Finalita_cessazione_circolazione_per_demolizione))
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro ObjectSomeValuesFrom(obdaod:ha_proprieta_dimensionale_Euro owl:Thing))
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro ObjectSomeValuesFrom(obdaod:ha_proprieta_dimensionale_ente_territoriale owl:Thing))
SubClassOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro DataSomeValuesFrom(obdaod:ha_misura_conteggio rdfs:Literal))
AnnotationAssertion(rdfs:comment obdaod:Osservazione "Questo concetto denota le osservazioni contenute nei dataset. Una osservazione rappresenta un singolo fatto del dataset. Ad esempio, una specifica immatricolazione di un veicolo in un dataset contenente dati sulle immatricolazioni. A ciascuna osservazione sono associati i valori delle misure di interesse."^^xsd:string)
EquivalentClasses(obdaod:Osservazione ObjectSomeValuesFrom(obdaod:basato_su owl:Thing))
EquivalentClasses(obdaod:Osservazione ObjectSomeValuesFrom(ObjectInverseOf(obdaod:contiene_osservazione) owl:Thing))
AnnotationAssertion(rdfs:comment obdaod:Osservazione_statistica "Questo concetto denota osservazioni di tipo statistico (cioè relative a dati aggregati). Osservazioni statistiche sono contenute in dataset statistici. Ad esempio, in un dataset statistici che contiene dati sul numero di immatricolazioni di autoveicoli aggregate per comune in un determinato anno, una osservazione statistica riporta il dato relativo al numero di veicoli immatricolati in un certo comune (ad esempio, Roma) in quell'anno."^^xsd:string)
SubClassOf(obdaod:Osservazione_statistica qb:Observation)
SubClassOf(obdaod:Osservazione_statistica obdaod:Osservazione)
AnnotationAssertion(rdfs:comment obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale "Questo concetto denota osservazioni relative alle prime iscrizioni avvenute in un certo anno e classificate per comune. Ogni specifica osservazione riporta informazioni sul numero di prime iscrizioni di autovetture in un dato comune (ad esempio Roma)  effettuate nell'anno di riferimento del dataset a cui appartiene l'osservazione (ad esempio 2017)."^^xsd:string)
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale ObjectSomeValuesFrom(obdaod:basato_su obda:Finalita_prima_iscrizione_di_veicolo_nuovo))
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale ObjectSomeValuesFrom(obdaod:ha_proprieta_dimensionale_ente_territoriale owl:Thing))
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale DataSomeValuesFrom(obdaod:ha_misura_conteggio rdfs:Literal))
AnnotationAssertion(rdfs:comment obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione "Questo concetto denota osservazioni relative alle prime iscrizioni al PRA avvenute in un certo anno e classificate per comune e per alimentazione. Ogni specifica osservazione riporta informazioni sul numero di prime iscrizioni di autovetture in un dato comune (ad esempio Roma) per una determinata alimentazione (ad esempio Benzina)  effettuate nell'anno di riferimento del dataset a cui appartiene l'osservazione (ad esempio 2017)."^^xsd:string)
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione ObjectSomeValuesFrom(obdaod:basato_su obda:Finalita_prima_iscrizione_di_veicolo_nuovo))
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione ObjectSomeValuesFrom(obdaod:ha_proprieta_dimensionale_alimentazione owl:Thing))
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione ObjectSomeValuesFrom(obdaod:ha_proprieta_dimensionale_ente_territoriale owl:Thing))
SubClassOf(obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione DataSomeValuesFrom(obdaod:ha_misura_conteggio rdfs:Literal))
AnnotationAssertion(rdfs:comment obda:ACI "Istanza che denota il soggetto ACI (Automobile Club d'Italia). E' una Federazione di 103 Automobile Club, che rappresenta e tutela gli interessi dell’automobilismo italiano. E' altresi un ente pubblico non economico a cui lo Stato ha delegato la gestione del Pubblico Registro Automobilistico (PRA) istituito con il R.D.L. n. 436 del 15 marzo 1927."^^xsd:string)
ClassAssertion(obda:Persona_giuridica obda:ACI)
EquivalentClasses(ObjectIntersectionOf(obda:Stato_di_veicolo obda:Stato_rappresentato_dal_PRA) ObjectUnionOf(obda:Stato_giuridico_di_veicolo obda:Stato_non_giuridico_di_veicolo))
EquivalentClasses(ObjectUnionOf(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune)) ObjectSomeValuesFrom(obda:ha_provincia owl:Thing))
SubClassOf(ObjectIntersectionOf(obda:Stato_con_ipoteca_o_privilegio obda:Stato_rappresentato_dal_PRA) ObjectSomeValuesFrom(obda:ipoteca_ha_creditore owl:Thing))
SubClassOf(ObjectIntersectionOf(obda:Stato_con_ipoteca_o_privilegio obda:Stato_rappresentato_dal_PRA) DataSomeValuesFrom(obda:data_scadenza_ipoteca rdfs:Literal))
SubClassOf(ObjectIntersectionOf(obda:Stato_con_ipoteca_o_privilegio obda:Stato_rappresentato_dal_PRA) DataSomeValuesFrom(obda:importo_complessivo_del_credito rdfs:Literal))
SubClassOf(ObjectIntersectionOf(obda:Stato_con_ipoteca_o_privilegio obda:Stato_rappresentato_dal_PRA) DataSomeValuesFrom(obda:importo_quota_capitale_ipoteca rdfs:Literal))
SubClassOf(ObjectUnionOf(obda:Accesso obda:Centro_urbano obda:Circoscrizione obda:Strada) obda:Luogo)
SubClassOf(ObjectUnionOf(obda:Accesso obda:Circoscrizione) obda:Luogo)
SubClassOf(ObjectUnionOf(obda:Autobus obda:Autocarro obda:Autovettura obda:Trattore_stradale) obda:Autoveicolo)
SubClassOf(ObjectUnionOf(obda:Autoveicolo obda:Filoveicolo obda:Macchina_agricola_semovente obda:Motoveicolo obda:Veicolo_ferroviario) obda:Veicolo_a_motore)
SubClassOf(ObjectUnionOf(obda:Autoveicolo obda:Motociclo obda:Rimorchio obda:Triciclo) obda:Veicolo_registrabile_al_PRA)
SubClassOf(ObjectUnionOf(obda:Ciclomotore obda:Motociclo obda:Quadriciclo obda:Triciclo) obda:Motoveicolo)
SubClassOf(ObjectUnionOf(obda:Circoscrizione_comunale obda:Circoscrizione_provinciale obda:Circoscrizione_regionale) obda:Circoscrizione)
SubClassOf(ObjectUnionOf(obda:Citta_metropolitana obda:Comune obda:Nazione obda:Provincia obda:Regione) obda:Ente_territoriale)
SubClassOf(ObjectUnionOf(obda:Citta_metropolitana obda:Comune obda:Nazione obda:Provincia obda:Regione obda:Ufficio_periferico) obda:Ente_territoriale)
SubClassOf(ObjectUnionOf(obda:Denotazione_indirizzo_di_residenza_in_applicazione_di_bollo_auto obda:Denotazione_indirizzo_per_soggetto_in_veicolo) obda:Denotazione_di_luogo)
SubClassOf(ObjectUnionOf(obda:Rimorchio obda:Semirimorchio) obda:Veicolo_a_trazione_di_veicolo_a_motore)
SubClassOf(ObjectUnionOf(obda:Uso_per_locazione_senza_conducente obda:Uso_per_noleggio_con_conducente obda:Uso_per_scuola_guida obda:Uso_per_servizio_di_linea obda:Uso_per_servizio_di_piazza) obda:Uso_per_terzi)
SubClassOf(ObjectUnionOf(obda:Uso_per_trasporto_non_contemporaneo obda:Uso_per_trasporto_promiscuo) obda:Uso_per_trasporto_cose)
SubClassOf(ObjectUnionOf(obda:Uso_per_trasporto_non_contemporaneo obda:Uso_per_trasporto_promiscuo) obda:Uso_per_trasporto_persone)
SubClassOf(ObjectUnionOf(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione) obdaod:Osservazione_statistica)
SubClassOf(ObjectOneOf(obda:ACI) obda:Soggetto)
SubClassOf(ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Persona_fisica) ObjectSomeValuesFrom(obda:ha_residenza owl:Thing))
SubClassOf(ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Persona_giuridica) ObjectSomeValuesFrom(obda:ha_sede_legale owl:Thing))
DisjointClasses(obda:Accesso obda:Centro_urbano obda:Circoscrizione obda:Strada)
DisjointClasses(obda:Autobus obda:Autocarro obda:Autovettura obda:Trattore_stradale)
DisjointClasses(obda:Autoveicolo obda:Filoveicolo obda:Macchina_agricola_semovente obda:Motoveicolo obda:Veicolo_ferroviario)
DisjointClasses(obda:Autoveicolo obda:Motociclo obda:Rimorchio obda:Triciclo)
DisjointClasses(obda:Ciclomotore obda:Motociclo obda:Quadriciclo obda:Triciclo)
DisjointClasses(obda:Circoscrizione_comunale obda:Circoscrizione_di_ufficio obda:Circoscrizione_metropolitana obda:Circoscrizione_nazionale obda:Circoscrizione_provinciale obda:Circoscrizione_regionale)
DisjointClasses(obda:Circoscrizione_comunale obda:Circoscrizione_provinciale obda:Circoscrizione_regionale)
DisjointClasses(obda:Citta_metropolitana obda:Comune obda:Nazione obda:Provincia obda:Regione)
DisjointClasses(obda:Citta_metropolitana obda:Comune obda:Nazione obda:Provincia obda:Regione obda:Ufficio_periferico)
DisjointClasses(obda:Regione ObjectUnionOf(ObjectUnionOf(obda:Citta_metropolitana obda:Provincia) ObjectUnionOf(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune)) ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) ObjectUnionOf(obda:Citta_metropolitana obda:Provincia))) ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Regione))
DisjointClasses(obda:Uso_per_locazione_senza_conducente obda:Uso_per_noleggio_con_conducente obda:Uso_per_scuola_guida obda:Uso_per_servizio_di_linea obda:Uso_per_servizio_di_piazza)
DisjointClasses(obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale obdaod:Demolizioni_annuali_di_autovetture_per_ente_territoriale_per_euro obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale obdaod:Prime_iscrizioni_annuali_di_autovetture_per_ente_territoriale_per_alimentazione)
DisjointClasses(ObjectUnionOf(obda:Citta_metropolitana obda:Provincia) ObjectUnionOf(obda:Comune ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) obda:Comune)) ObjectSomeValuesFrom(ObjectInverseOf(obda:ha_stato_di_soggetto) ObjectUnionOf(obda:Citta_metropolitana obda:Provincia)))
DisjointClasses(ObjectSomeValuesFrom(obda:ha_residenza owl:Thing) ObjectSomeValuesFrom(obda:ha_sede owl:Thing))
)