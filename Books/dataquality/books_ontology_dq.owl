Prefix(:=<http://www.obdasystems.com/books/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(time:=<http://www.w3.org/2006/time#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)

Ontology(<http://www.obdasystems.com/books/>

<urn:absolute:dataquality>
Declaration(Class(:AudioBook))
Declaration(Class(:Author))
Declaration(Class(:Book))
Declaration(Class(:E-Book))
Declaration(Class(:EconomicEdition))
Declaration(Class(:Edition))
Declaration(Class(:Editor))
Declaration(Class(:EmergingWriter))
Declaration(Class(:PrintedBook))
Declaration(Class(:SpecialEdition))
Declaration(Class(:UneditedBook))
Declaration(ObjectProperty(:editedBy))
Declaration(ObjectProperty(:hasEdition))
Declaration(ObjectProperty(:writtenBy))
Declaration(DataProperty(:dateOfPublication))
Declaration(DataProperty(:editionNumber))
Declaration(DataProperty(:genre))
Declaration(DataProperty(:name))
Declaration(DataProperty(:title))
AnnotationAssertion(rdfs:label :editedBy "editedBy"@it)
FunctionalObjectProperty(:editedBy)
ObjectPropertyDomain(:editedBy :Edition)
ObjectPropertyRange(:editedBy :Editor)
AnnotationAssertion(rdfs:label :hasEdition "hasEdition"@it)
InverseFunctionalObjectProperty(:hasEdition)
ObjectPropertyDomain(:hasEdition :Book)
ObjectPropertyRange(:hasEdition :Edition)
AnnotationAssertion(rdfs:label :writtenBy "writtenBy"@it)
ObjectPropertyDomain(:writtenBy :Book)
ObjectPropertyRange(:writtenBy :Author)
AnnotationAssertion(rdfs:label :dateOfPublication "dateOfPublication"@it)
FunctionalDataProperty(:dateOfPublication)
DataPropertyDomain(:dateOfPublication :Edition)
AnnotationAssertion(rdfs:label :editionNumber "editionNumber"@it)
FunctionalDataProperty(:editionNumber)
DataPropertyDomain(:editionNumber :Edition)
AnnotationAssertion(rdfs:label :genre "genre"@it)
DataPropertyDomain(:genre :Book)
AnnotationAssertion(rdfs:label :name "name"@it)
FunctionalDataProperty(:name)
DataPropertyRange(:name xsd:string)
AnnotationAssertion(rdfs:label :title "title"@it)
FunctionalDataProperty(:title)
DataPropertyDomain(:title :Book)
AnnotationAssertion(rdfs:label :AudioBook "AudioBook"@it)
AnnotationAssertion(rdfs:label :Author "Author"@it)
SubClassOf(:Author ObjectIntersectionOf(DataMinCardinality(1 :name) DataMaxCardinality(1 :name)))
SubClassOf(:Author DataSomeValuesFrom(:name rdfs:Literal))
AnnotationAssertion(rdfs:label :Book "Book"@it)
EquivalentClasses(:Book ObjectSomeValuesFrom(:writtenBy owl:Thing))
EquivalentClasses(:Book DataSomeValuesFrom(:genre rdfs:Literal))
EquivalentClasses(:Book DataSomeValuesFrom(:title rdfs:Literal))
SubClassOf(:Book DataMinCardinality(1 :title))
SubClassOf(:Book DataMaxCardinality(3 :genre))
AnnotationAssertion(rdfs:label :E-Book "E-Book"@it)
SubClassOf(:E-Book ObjectAllValuesFrom(:hasEdition :EconomicEdition))
AnnotationAssertion(rdfs:label :EconomicEdition "EconomicEdition"@it)
DisjointClasses(:EconomicEdition :SpecialEdition)
AnnotationAssertion(rdfs:comment :Edition "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"> <html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\"> p, li { white-space: pre-wrap; } </style></head><body style=\"   font-weight:400; font-style:normal;\"> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">DESCRIPTION</p></body></html>"@it)
AnnotationAssertion(rdfs:label :Edition "Edition"@it)
EquivalentClasses(:Edition ObjectSomeValuesFrom(:editedBy owl:Thing))
EquivalentClasses(:Edition DataSomeValuesFrom(:dateOfPublication rdfs:Literal))
EquivalentClasses(:Edition DataSomeValuesFrom(:editionNumber rdfs:Literal))
SubClassOf(:Edition ObjectMinCardinality(1 :editedBy :Editor))
AnnotationAssertion(rdfs:label :Editor "Editor"@it)
SubClassOf(:Editor DataSomeValuesFrom(:name rdfs:Literal))
AnnotationAssertion(rdfs:label :EmergingWriter "EmergingWriter"@it)
SubClassOf(:EmergingWriter :Author)
SubClassOf(:EmergingWriter ObjectMaxCardinality(1 ObjectInverseOf(:writtenBy)))
AnnotationAssertion(rdfs:label :PrintedBook "PrintedBook"@it)
AnnotationAssertion(rdfs:label :SpecialEdition "SpecialEdition"@it)
AnnotationAssertion(rdfs:label :UneditedBook "UneditedBook"@it)
SubClassOf(:UneditedBook :Book)
DisjointClasses(:UneditedBook ObjectSomeValuesFrom(:hasEdition owl:Thing))
SubClassOf(ObjectUnionOf(:AudioBook :E-Book :PrintedBook) :Book)
SubClassOf(ObjectUnionOf(:EconomicEdition :SpecialEdition) :Edition)
DisjointClasses(:AudioBook :E-Book :PrintedBook)
HasKey(:Author () (:name))
HasKey(:Book (:hasEdition) (:title))
HasKey(:Edition () (:dateOfPublication :editionNumber))
HasKey(:Editor () (:name))
)